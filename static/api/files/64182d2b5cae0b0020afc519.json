{
  "openapi": "3.0.0",
  "info": {
    "title": "App Management APIs",
    "description": "Create and manage apps on-the-fly using our app management APIs",
    "version": "1.0"
  },
  "servers": [{ "url": "https://apimgmt.cometchat.io" }],
  "paths": {
    "/apps": {
      "post": {
        "tags": ["App"],
        "summary": "Create",
        "description": "Creates an app in the account. It returns all the app related information.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name", "region"],
                "properties": {
                  "name": {
                    "description": "name of the app.",
                    "type": "string"
                  },
                  "region": {
                    "description": "Region of the app",
                    "type": "string",
                    "default": "us",
                    "enum": ["eu", "us"]
                  },
                  "version": {
                    "description": "version of an app",
                    "type": "string",
                    "default": "3"
                  },
                  "skipSampleData": {
                    "description": "skips sample data if it is set true",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created App",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/appSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "id": "<APP_ID>",
                    "name": "<App Name>",
                    "plan": "trial",
                    "trialEndsAt": 1588887393,
                    "state": "active",
                    "owner": 1656,
                    "region": "us",
                    "createdAt": 1586295393,
                    "appOwner": {
                      "id": "1656",
                      "name": "<OWNER_NAME>",
                      "email": "youremail@domain.com"
                    },
                    "appRegion": {
                      "id": "us",
                      "name": "USA",
                      "description": "The USA region has serverslocated at Ohio."
                    },
                    "apiKeys": {
                      "<API_KEY1>": {
                        "apiKey": "<API_KEY1>",
                        "name": "Rest API Key",
                        "scope": "fullAccess",
                        "createdBy": "app_system"
                      },
                      "<API_KEY2>": {
                        "apiKey": "<API_KEY2>",
                        "name": "Auth Key",
                        "scope": "authOnly",
                        "createdBy": "app_system"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["App"],
        "summary": "List",
        "description": "Lists all the apps for an account.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" }
        ],
        "responses": {
          "200": {
            "description": "List Apps",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "": { "$ref": "#/components/schemas/appSchema" }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/metaSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "id": "<APP_ID>",
                    "name": "<App Name>",
                    "plan": "trial",
                    "trialEndsAt": 1588887393,
                    "state": "active",
                    "owner": 1656,
                    "region": "us",
                    "createdAt": 1586295393,
                    "appOwner": {
                      "id": "1656",
                      "name": "<OWNER_NAME>",
                      "email": "youremail@domain.com"
                    },
                    "appRegion": {
                      "id": "us",
                      "name": "USA",
                      "description": "The USA region has serverslocated at Ohio."
                    },
                    "accessKey": "<API_KEY>",
                    "apiKeys": {
                      "<API_KEY1>": {
                        "apiKey": "<API_KEY1>",
                        "name": "Rest API Key",
                        "scope": "fullAccess",
                        "createdBy": "app_system"
                      },
                      "<API_KEY2>": {
                        "apiKey": "<API_KEY2>",
                        "name": "Auth Key",
                        "scope": "authOnly",
                        "createdBy": "app_system"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}": {
      "delete": {
        "tags": ["App"],
        "summary": "Delete",
        "description": "Schedule a specific app for deletion.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "List Apps",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/deleteSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": { "success": true, "scheduledToDeleteAt": 1631203178 }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions": {
      "post": {
        "tags": ["Extensions"],
        "summary": "Enable/Disable",
        "description": "Enables or disables the extension for an app.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "enabled": {
                    "description": "Array of extension IDs that has to be enabled.",
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "disabled": {
                    "description": "Array of extension IDs that has to be disabled.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enabled/Disabled Extension",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/extensionSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "enabled": {
                      "extention_id1": {
                        "success": true,
                        "message": "The extension extension_id1 has been enabled successfully."
                      },
                      "extention_id2": {
                        "success": true,
                        "message": "The extension extension_id2 has been enabled successfully."
                      }
                    },
                    "disabled": {
                      "extention_id3": {
                        "success": true,
                        "message": "The extension extension_id1 has been enabled successfully."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extensions"],
        "summary": "List Extensions",
        "description": "List the Extensions.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" },
          { "$ref": "#/components/parameters/perPage--extensions" }
        ],
        "responses": {
          "200": {
            "description": "Enabled/Disabled Extension",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/extensionListSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "id": "widget",
                      "name": "Chat Widget",
                      "tagLine": "Drag-n-drop chat plugin for your website",
                      "description": "Drag-n-drop chat plugin for your website",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://widget-eu.cometchats.io",
                      "accessToAppData": false,
                      "adminURL": "https://widget-eu.cometchat.io/v1/show-setting?appToken=BArL8wLC1jkTws5bgH1DDvAMDevHdiAmMI5NGyQXs-I=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1591812821,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "document",
                      "name": "Collaborative document",
                      "tagLine": "Allows you create and share documents for collaboration",
                      "description": "Allows you create and share documents for collaboration",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://document-eu.cometchat.io/v1/create",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1592815197,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "whiteboard",
                      "name": "Collaborative whiteboard",
                      "tagLine": "Allows you create and share whiteboards for collaboration",
                      "description": "Allows you create and share whiteboards for collaboration",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://whiteboard-eu.cometchat.io/v1/create",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1595838286,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "data-masking",
                      "name": "Data Masking",
                      "tagLine": "Hide phone numbers, email addresses and other sensitive information in messages.",
                      "description": "Hide phone numbers, email addresses and other sensitive information in messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://data-masking-eu.cometchat.io/v1/filter",
                      "accessToAppData": false,
                      "adminURL": "https://data-masking-eu.cometchat.io/v1/show-setting?appToken=DSjVCnryJFoSIgvIaCJUWF5sS1mMLy7V-pD6HoNlA3A=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1592815197,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "email-notification",
                      "name": "Email Notification",
                      "tagLine": "Notify users via email for unread messages.",
                      "description": "Notify users via email for unread messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://email-notification-eu.cometchat.io/v1/send-email",
                      "accessToAppData": false,
                      "adminURL": "https://email-notification-eu.cometchat.io/v1/show-setting?appToken=c2JH61Mw2dnThPa_tHfP284hF6-8kbAvVfIlNSSzgKk=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568373595,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "email-replies",
                      "name": "Email Replies",
                      "tagLine": "Reply to texts directly via emails",
                      "description": "Replying in a conversation from Email notifications just got simpler. With Email Replies, users can respond in a conversation by replying to the email.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://email-replies-eu.cometchat.io/v1/show-setting?appToken=slIAhyFb4PCG5R4dJBM4lTlYTdYznNORCBPL-Rxw_Qs=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1592815197,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "emojis",
                      "name": "Emojis",
                      "tagLine": "Emojis for web",
                      "description": "Emojis for web",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://emojis-eu.cometchat.io/v1/emojis",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1592829829,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "gifs-gfycat",
                      "name": "Gfycat",
                      "tagLine": "Get the best GIFS for all your conversations",
                      "description": "Get the best GIFS for all your conversations",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1622447638,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "gifs-giphy",
                      "name": "Giphy",
                      "tagLine": "Be Animated",
                      "description": "Be Animated",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://gifs-giphy-eu.cometchat.io/v1/show-setting?appToken=Lv2_oE3L6JHOMbOiNNBjWsi0v6mV9r-aKVLofy_KZ7s=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1622447638,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "image-moderation",
                      "name": "Image Moderation",
                      "tagLine": "AI-powered image moderation to detect unsafe content.",
                      "description": "AI-powered image moderation to detect unsafe content.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://image-moderation-eu.cometchat.io/v1/analyze",
                      "accessToAppData": false,
                      "adminURL": "https://image-moderation-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568373925,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "report-user",
                      "name": "Report User",
                      "tagLine": "Enable users to report other users",
                      "description": "Enable users to report other users",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://report-user-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1655375268,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "report-message",
                      "name": "Report User",
                      "tagLine": "Enable users to report messages in chat",
                      "description": "Enable users to report messages in chat",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://report-message-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1655447120,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "stickers-stipop",
                      "name": "Stipop",
                      "tagLine": "Used to create meaningful experiences in your app with stickers that users love.",
                      "description": "Used to create meaningful experiences in your app with stickers that users love.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://stickers-stipop-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1655375268,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "url-shortener-tinyurl",
                      "name": "TinyURL",
                      "tagLine": "Helps you convert your long website links into short, manageable URLs that are reliable, secure and never expire.",
                      "description": "Helps you convert your long website links into short, manageable URLs that are reliable, secure and never expire.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://url-shortener-tinyurl-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1655375268,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "url-shortener-bitly",
                      "name": "Bitly",
                      "tagLine": "Helps you create and share branded links with custom domains at scale",
                      "description": "Helps you create and share branded links with custom domains at scale",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://url-shortener-bitly-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1655375268,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "human-moderation",
                      "name": "In-flight Message Moderation",
                      "tagLine": "Manually moderate content to ensure a safe messaging environment.",
                      "description": "Manually moderate content to ensure a safe messaging environment.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://human-moderation-eu.cometchat.io/v1/moderate-message",
                      "accessToAppData": false,
                      "adminURL": "https://human-moderation-eu.cometchat.io/v1/show-setting?appToken=-NxCcxlAt1qBHn8nibcc98qw5XqTmFB4QYCbJaGO3fo=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568373980,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "link-preview",
                      "name": "Link Preview",
                      "tagLine": "Generate meta description for URLs.",
                      "description": "Generate meta description for URLs.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://link-preview-eu.cometchat.io/v1/generate-preview",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568374120,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "mentions",
                      "name": "Mentions",
                      "tagLine": "Mention users in conversations",
                      "description": "Mention users in conversations",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://mentions-eu.cometchat.io/v1/save",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1622447638,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "voice-transcription",
                      "name": "Voice transcription",
                      "tagLine": "Used to transcribe Audio Messages",
                      "description": "Used to transcribe Audio Messages",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://voice-transcription-eu.cometchat.io/v1/transcribe",
                      "accessToAppData": false,
                      "adminURL": "https://voice-transcription-eu.cometchat.io/v1/show-setting?appToken=NTxjUhEcKA1uIQ-lCyaYy0hrM2C77fs8y6wRtEZ04wg=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1622447638,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "message-translation",
                      "name": "Message Translation",
                      "tagLine": "Translate text messages in different languages on-the-fly.",
                      "description": "Translate text messages in different languages on-the-fly.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://message-translation-eu.cometchat.io/v1/translate",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568373749,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "pin-message",
                      "name": "Pin Message",
                      "tagLine": "Pin messages in group conversations",
                      "description": "Pin message for all the users in a conversation.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1614671943,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "polls",
                      "name": "Polls",
                      "tagLine": "Polls to quickly ask for opinions in chats",
                      "description": "Polls to quickly ask for opinions in chats",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1594721219,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "profanity-filter",
                      "name": "Profanity Filter",
                      "tagLine": "Detect and censor profanity in messages.",
                      "description": "Detect and censor profanity in messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://profanity-filter-eu.cometchat.io/v1/filter",
                      "accessToAppData": false,
                      "adminURL": "https://profanity-filter-eu.cometchat.io/v1/show-setting?appToken=NTxjUhEcKA1uIQ-lCyaYy0hrM2C77fs8y6wRtEZ04wg=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1568373871,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "push-notification",
                      "name": "Push Notification",
                      "tagLine": "Notify users via push notifications.",
                      "description": "Notify users via push notifications.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://push-notification-eu.cometchat.io/v1/send-push",
                      "accessToAppData": false,
                      "adminURL": "https://push-notification-eu.cometchat.io/v1/show-sett*ing?appToken=TW6rWujmViKwmmPfp68L4kK_YGWCaYw_wLYjtr0R1-A=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1568373479,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_auth_token_created",
                            "description": "The hook triggers after the auth token is created.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_auth_token_deleted",
                            "description": "The hook triggers after the auth token is deleted.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_auth_token_updated",
                            "description": "The hook triggers after the auth token is updated.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_created",
                            "description": "The hook triggers after group is created.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_deleted",
                            "description": "The hook triggers after group is deleted.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_joined",
                            "description": "The hook triggers after user joins a group.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_left",
                            "description": "The hook triggers after user leaves a group.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_members_added",
                            "description": "The hook triggers after members are added to group.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_members_banned",
                            "description": "The hook triggers after members are banned from group.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_members_kicked",
                            "description": "The hook triggers after member is kicked from group.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_group_members_unbanned",
                            "description": "The hook triggers after members are unbanned from group.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_logged_out",
                            "description": "The hook triggers after user logs out.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          },
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          },
                          {
                            "hook": "after_scope_changed",
                            "description": "The hook will be triggered after changing the scope.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          },
                          {
                            "hook": "after_user_deleted",
                            "description": "The hook triggers after user is deleted.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1589548874
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "reactions",
                      "name": "Reactions",
                      "tagLine": "React to an individual message with a specific emotion quickly.",
                      "description": "React to an individual message with a specific emotion quickly.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://reactions-eu.cometchat.io/v1/react",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1592815197,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "rich-media",
                      "name": "Rich Media Preview",
                      "tagLine": "Generate rich media previews for all popular sites",
                      "description": "Generate rich media previews for all popular sites",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://rich-media-eu.cometchat.io/v1/preview",
                      "accessToAppData": false,
                      "adminURL": "https://rich-media-eu.cometchat.io/v1/show-setting?appToken=08RBa07frnTq8VnnGpR6XeHaKCHwplEXcsevSP5xz*Q4=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1592815197,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "save-message",
                      "name": "Save Message",
                      "tagLine": "Saved messages in one-on-one and group conversations",
                      "description": "Enable users to save messages from one-on-one and group conversations\\n",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1614671960,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "sentiment-analysis",
                      "name": "Sentiment Analysis",
                      "tagLine": "AI-powered sentiment analysis for messages.",
                      "description": "AI-powered sentiment analysis for messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://sentiment-analysis-eu.cometchat.io/v1/analyze",
                      "accessToAppData": false,
                      "adminURL": "https://sentiment-analysis-eu.cometchat.io/v1/show-setting?appToken=TEj2rzc_KW_lvlzMnVBUgWnEjmOHhZ_mVs4yktn37s0=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568374255,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "smart-reply",
                      "name": "Smart Reply",
                      "tagLine": "Suggest ML-powered ready replies for messages.",
                      "description": "Suggest ML-powered ready replies for messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://smart-reply-eu.cometchat.io/v1/fetch-reply",
                      "accessToAppData": false,
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568374179,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "sms-notification",
                      "name": "SMS Notification",
                      "tagLine": "Notify users via sms for unread messages.",
                      "description": "Notify users via sms for unread messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://sms-notification-eu.cometchat.io/v1/send-sms",
                      "accessToAppData": false,
                      "adminURL": "https://sms-notification-eu.cometchat.io/v1/show-sett*ing?appToken=6E7gznI3V1RJHCxAb8J7aUZBlltU2c6W7iydzfrWIGM=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568373671,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "gifs-tenor",
                      "name": "Tenor Gifs",
                      "tagLine": "Send Gifs",
                      "description": "Send Gifs",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://gifs-tenor-eu.cometchat.io/v1/show-setting?appToken=08RBa07frnTq8VnnGpR6XeHaKCHwplEXcsevSP5xz*Q4=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1592815197,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "e2ee",
                      "name": "End-to-end Encryption",
                      "tagLine": "End-to-end encryption is intended to prevent data being read or modified by anyone but the sender and recipient(s).",
                      "description": "End-to-end encryption is intended to prevent data being read or modified by anyone but the sender and recipient(s).",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://e2ee-eu.cometchat.io/v1/action",
                      "accessToAppData": false,
                      "adminURL": "https://e2ee-eu.cometchat.io/v1/show-setting?appToken=08RBa07frnTq8VnnGpR6XeHaKCHwplEXcsevSP5xz*Q4=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1592815197,
                      "hooks": {
                        "data": [
                          {
                            "hook": "before_message",
                            "description": "The hook will be triggered before adding message to database.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "stickers",
                      "name": "Stickers",
                      "tagLine": "Send & manage stickers",
                      "description": "Send & manage stickers",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://stickers-eu.cometchat.io/v1/react",
                      "accessToAppData": false,
                      "adminURL": "https://stickers-eu.cometchat.io/v1/show-setting?appToken=geCcCA2y__JXNDpLJVdERM1ysruVsaoABrxO9Xzqu*bk=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1592815197,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "intercom",
                      "name": "Intercom",
                      "tagLine": "Connect and exchange messages between CometChat and Intercom",
                      "description": "Connect and exchange messages between CometChat and Intercom",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://intercom-eu.cometchat.io/v1/contact-support",
                      "accessToAppData": false,
                      "adminURL": "https://intercom-eu.cometchat.io/v1/show-setting?appToken=geCcCA2y__JXNDpLJVdERM1ysruVsaoABrxO9Xzqu*bk=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1622447638,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message.",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1555001765
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "broadcast",
                      "name": "Video Broadcasting",
                      "tagLine": "Real-time live video streaming & broadcasting to 1000s of viewers",
                      "description": "Real-time live video streaming & broadcasting to 1000s of viewers",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "accessToAppData": false,
                      "adminURL": "https://broadcasting-eu.cometchat.io/v1/show-setting?appToken=Lv2_oE3L6JHOMbOiNNBjWsi0v6mV9r-aKVLofy_KZ7s=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1622447638,
                      "hooks": { "data": [] },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "virus-malware-scanner",
                      "name": "Virus Malware Scanner",
                      "tagLine": "Scan user uploaded files & media for viruses and malware.",
                      "description": "Scan user uploaded files & media for viruses and malware.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://virus-malware-scanner-eu.cometchat.io/v1/scan",
                      "accessToAppData": false,
                      "adminURL": "https://virus-malware-scanner-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZCI6IjE5NzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": true,
                      "createdAt": 1568373925,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "stickers",
                      "name": "Stickers",
                      "tagLine": "Enables Stickers.",
                      "description": "The Stickers Extension is more like an image manager which allows you to quickly add/remove stickers directly from the dashboard.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://stickers-eu.cometchat.io/v1/",
                      "accessToAppData": false,
                      "adminURL": "https://stickers-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHB6dd",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1568373925,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "sms-notification",
                      "name": "SMS Notification",
                      "tagLine": "Notify users via sms for unread messages.",
                      "description": "Notify users via sms for unread messages.",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://sms-notification-eu.cometchat.io/v1/send-sms",
                      "accessToAppData": false,
                      "adminURL": "https://sms-notification-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyWqAaw1ekcrk",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1568373925,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    },
                    {
                      "id": "email-replies",
                      "name": "Email Replies",
                      "tagLine": "Respond to conversations by replying to email notifications",
                      "description": "Respond to conversations by replying to email notifications",
                      "author": "CometChat",
                      "email": "help@cometchat.com",
                      "webhookURL": "https://email-replies-eu.cometchat.io/v1/",
                      "accessToAppData": false,
                      "adminURL": "https://email-replies-eu.cometchat.io/v1/show-setting?appToken=cDnVkg8SFY7wjiaHjpGWyTqYaw9ekcrk-tAHhSyxkDc=.eyJhcHBJZzQ0OGU3NzlmMGZhYyJ9",
                      "websiteURL": "https://www.cometchat.com",
                      "isActive": true,
                      "isPrivate": false,
                      "isInvisible": false,
                      "isThirdParty": false,
                      "createdAt": 1568373925,
                      "hooks": {
                        "data": [
                          {
                            "hook": "after_message",
                            "description": "The hook triggers after sending a message",
                            "isActive": true,
                            "enabled": 1,
                            "createdAt": 1552383451
                          }
                        ]
                      },
                      "categories": { "data": [] }
                    }
                  ],
                  "meta": {
                    "pagination": {
                      "total": 32,
                      "count": 25,
                      "per_page": 25,
                      "current_page": 1,
                      "total_pages": 2,
                      "links": {
                        "next": "http://apimgmt-local.cometchat-dev.com//apps/197448e779f0fac/extensions?page=2"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/widget/v2/settings": {
      "post": {
        "tags": ["Chat Widgets"],
        "summary": "Create",
        "description": "Create a new Chat Widget.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chatWidgetRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Chat Widget",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "statusCode": { "type": "integer" },
                        "success": { "type": "boolean" },
                        "responseTime": { "type": "integer" },
                        "body": {
                          "properties": {
                            "data": {
                              "properties": {
                                "widgetId": { "type": "string" }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "widgetId": "f7ee7c30-416b-4398-9edd-2595cefd676f"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Chat Widgets"],
        "summary": "Update",
        "description": "Update an existing Chat Widget.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/chatWidgetPutSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Chat Widget",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "statusCode": { "type": "integer" },
                        "success": { "type": "boolean" },
                        "responseTime": { "type": "integer" },
                        "body": {
                          "properties": {
                            "data": {
                              "properties": {
                                "success": { "type": "boolean" }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Chat Widgets"],
        "summary": "List",
        "description": "List all the Chat Widgets for an app.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Create Chat Widget",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "": {
                      "$ref": "#/components/schemas/chatWidgetResponseSchema"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "body": {
                      "data": [
                        {
                          "configuration": {
                            "name": "Test Chat Widget",
                            "style": {
                              "docked_layout_icon_background": "#03a9f4",
                              "custom_js": "v2",
                              "docked_layout_icon_close": "https://widget-js.cometchat.io/v2/resources/chat_close.svg",
                              "custom_css": "string",
                              "docked_layout_icon_open": "https://widget-js.cometchat.io/v2/resources/chat_bubble.svg",
                              "primary_color": "#03A9F4",
                              "foreground_color": "#000000",
                              "background_color": "#FFFFFF",
                              "override_system_background_colors": true
                            },
                            "main": {
                              "allow_message_reactions": true,
                              "enable_collaborative_whiteboard": true,
                              "enable_collaborative_document": true,
                              "enable_video_calling": true,
                              "enable_editing_messages": true,
                              "enable_sending_messages": true,
                              "allow_moderator_to_delete_member_messages": true,
                              "join_or_leave_groups": true,
                              "block_user": true,
                              "enable_voice_calling": true,
                              "send_emojis": true,
                              "send_files": true,
                              "view_shared_media": true,
                              "enable_sound_for_messages": true,
                              "send_photos_videos": true,
                              "show_stickers": true,
                              "enable_sound_for_calls": true,
                              "show_call_notifications": true,
                              "view_group_members": true,
                              "allow_delete_groups": true,
                              "allow_kick_ban_members": true,
                              "hide_join_leave_notifications": true,
                              "enable_message_translation": true,
                              "send_message_in_private_to_group_member": true,
                              "create_groups": true,
                              "show_typing_indicators": true,
                              "show_user_presence": true,
                              "allow_add_members": true,
                              "enable_deleting_messages": true,
                              "enable_threaded_replies": true,
                              "show_delivery_read_indicators": true,
                              "hide_deleted_messages": true,
                              "allow_creating_polls": true,
                              "allow_promote_demote_members": true,
                              "share_live_reactions": true,
                              "show_emojis_in_larger_size": true,
                              "allow_mention_members": false,
                              "enable_replying_to_messages": false,
                              "enable_share_copy_forward_messages": false,
                              "highlight_messages_from_moderators": false,
                              "show_call_recording_option": false,
                              "send_voice_notes": true,
                              "send_gifs": false,
                              "share_location": false,
                              "set_groups_in_qna_mode_by_moderators": false,
                              "send_reply_in_private_to_group_member": false
                            },
                            "version": "v2",
                            "sidebar": {
                              "group_listing": "public_and_password_protected_groups",
                              "start_a_new_conversation": "all_chats",
                              "user_settings": true,
                              "calls": true,
                              "chats": true,
                              "user_listing": "all_users",
                              "groups": true,
                              "recent_chat_listing": "all_chats",
                              "sidebar_navigation_sequence": [
                                "chats",
                                "users",
                                "groups",
                                "calls",
                                "settings"
                              ],
                              "users": true
                            },
                            "appId": "564663ddb71bbb"
                          },
                          "widgetId": "c59766f0-5318-4c82-b6b3-fa09ee80a506"
                        }
                      ]
                    },
                    "responseTime": 0.11409401893615723
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/gifs-giphy/v1/settings": {
      "post": {
        "tags": ["Extension - Giphy"],
        "summary": "Store settings",
        "description": "Saving the settings for Giphy extensions for the first time",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/giphyRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Giphy Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/giphySchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "giphyApiKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Giphy"],
        "summary": "Update settings",
        "description": "Update the settings for Giphy extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/giphyRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Chat Widget",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/giphySchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "giphyApiKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Giphy"],
        "summary": "Get settings",
        "description": "Returns the settings for Giphy extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Giphy Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/giphyGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "giphyApiKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "appId": 19244939392
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Giphy"],
        "summary": "Delete settings for Giphy",
        "description": "Deletes the settings for Giphy extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Giphy Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/giphyDeleteSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": { "data": { "settings": { "success": true } } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/xss-filter/v1/settings": {
      "post": {
        "tags": ["Extension - XSS Filter"],
        "summary": "Store settings",
        "description": "Store new settings for XSS Filter extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/xssRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store XSS Filter Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/xssSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - XSS Filter"],
        "summary": "Update settings",
        "description": "Update the settings for XSS Filter extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xssRequestUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update XSS filters Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/xssSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - XSS Filter"],
        "summary": "Get settings",
        "description": "Get settings for XSS Filter extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Update XSS filters Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/xssSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "dropMessage": false,
                          "appId": "199319cc4d186d86"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - XSS Filter"],
        "summary": "Delete settings",
        "description": "Delete the settings for XSS Filter extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete XSS filters Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/xssSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/image-moderation/v1/settings": {
      "post": {
        "tags": ["Extension - Image Moderation"],
        "summary": "Store settings",
        "description": "Store new settings for Image moderation extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/imageModerationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Image Moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/imageModerationSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Image Moderation"],
        "summary": "Update settings",
        "description": "Update the settings for Image moderation extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/imageModerationUpdateRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Image Moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/imageModerationSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Image Moderation"],
        "summary": "Get settings",
        "description": "Get settings for Image moderation extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Image Moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/imageModerationGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Image Moderation"],
        "summary": "Delete settings",
        "description": "Delete the settings for Image moderation extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Image Moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/imageModerationDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "success": true } } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/report-user/v1/settings": {
      "post": {
        "tags": ["Extension - Report user"],
        "summary": "Store settings",
        "description": "Store new settings for Report user extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportUserRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Report User Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportUserCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "maxReports": 3,
                          "useWebhook": true,
                          "webhookURL": "https://example.com/take-action",
                          "basicAuthUsername": "abcd",
                          "basicAuthPassword": "1234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Report user"],
        "summary": "Update settings",
        "description": "Update the settings for Report user extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportUserRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Report User Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportUserCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "maxReports": 3,
                          "useWebhook": true,
                          "webhookURL": "https://example.com/take-action",
                          "basicAuthUsername": "abcd",
                          "basicAuthPassword": "12345"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Report user"],
        "summary": "Get settings",
        "description": "Get settings for Report user extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Report User Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportUserGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "maxReports": 3,
                          "useWebhook": true,
                          "webhookURL": "https://example.com/take-action",
                          "basicAuthUsername": "abcd",
                          "basicAuthPassword": "12345",
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Report user"],
        "summary": "Delete settings",
        "description": "Delete the settings for Report user extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Report User Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportUserDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/report-message/v1/settings": {
      "post": {
        "tags": ["Extension - Report message"],
        "summary": "Store settings",
        "description": "Store new settings for Report message extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportMessageRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Report Message Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportMessageCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "maxReports": 3,
                          "useWebhook": true,
                          "webhookURL": "https://example.com/take-action",
                          "basicAuthUsername": "abcd",
                          "basicAuthPassword": "1234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Report message"],
        "summary": "Update settings",
        "description": "Update the settings for Report message extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportMessageRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Report Message Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportMessageCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "maxReports": 3,
                          "useWebhook": true,
                          "webhookURL": "https://example.com/take-action",
                          "basicAuthUsername": "abcd",
                          "basicAuthPassword": "12345"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Report message"],
        "summary": "Get settings",
        "description": "Get settings for Report message extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Report Message Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportMessageGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "maxReports": 3,
                          "useWebhook": true,
                          "webhookURL": "https://example.com/take-action",
                          "basicAuthUsername": "abcd",
                          "basicAuthPassword": "12345",
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Report message"],
        "summary": "Delete settings",
        "description": "Delete the settings for Report message extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Report Message Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/reportMessageDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/voice-transcription/v1/settings": {
      "post": {
        "tags": ["Extension - Voice transcription"],
        "summary": "Store settings",
        "description": "Store new settings for Voice transcription extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/voiceTranscriptionRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Voice transcription Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/voiceTranscriptionCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": { "revaiAPIKey": "dwijdiwdwi####" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Voice transcription"],
        "summary": "Update settings",
        "description": "Update the settings for Voice transcription extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/voiceTranscriptionRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Voice transcription Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/voiceTranscriptionCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": { "revaiAPIKey": "dwijdiwdwi####" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Voice transcription"],
        "summary": "Get settings",
        "description": "Get settings for Voice transcription extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Voice transcription Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/voiceTranscriptionGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "revaiAPIKey": "dwijdiwdwi####",
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Voice transcription"],
        "summary": "Delete settings",
        "description": "Delete the settings for Voice transcription extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Voice transcription Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/voiceTranscriptionDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/stickers-stipop/v1/settings": {
      "post": {
        "tags": ["Extension - Stipop"],
        "summary": "Store settings",
        "description": "Store new settings for Stipop extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/stipopRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Stipop Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/stipopCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "stipopApiKey": "e24ce#2324b2jrbj3212",
                          "stipopAppId": "9221#njdwe112213131"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Stipop"],
        "summary": "Update settings",
        "description": "Update the settings for Stipop extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/stipopRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Stipop Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/stipopCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "stipopApiKey": "e24ce#2324b2jrbj3212",
                          "stipopAppId": "9221#njdwe112213131"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Stipop"],
        "summary": "Get settings",
        "description": "Get settings for Stipop extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Stipop Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/stipopGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "stipopApiKey": "e24ce#2324b2jrbj3212",
                          "stipopAppId": "9221#njdwe112213131",
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Stipop"],
        "summary": "Delete settings",
        "description": "Delete the settings for Stipop extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Stipop Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/stipopDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/sentiment-analysis/v1/settings": {
      "post": {
        "tags": ["Extension - Sentiment analysis"],
        "summary": "Store settings",
        "description": "Store new settings for Sentiment analysis extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sentimentAnalysisRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Sentiment analysis Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/sentimentAnalysisSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Sentiment analysis"],
        "summary": "Update settings",
        "description": "Update the settings for Sentiment analysis extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sentimentAnalysisRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Sentiment analysis Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/sentimentAnalysisSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Sentiment analysis"],
        "summary": "Get settings",
        "description": "Get settings for Sentiment analysis extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Update Sentiment analysis Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/sentimentAnalysisGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "dropMessage": false,
                          "appId": "199319cc4d186d86"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Sentiment analysis"],
        "summary": "Delete settings",
        "description": "Delete the settings for Sentiment analysis extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Sentiment analysis Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/sentimentAnalysisDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "settings": { "dropMessage": false } } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/url-shortener-tinyurl/v1/settings": {
      "post": {
        "tags": ["Extension - TinyURL"],
        "summary": "Store settings",
        "description": "Store new settings for TinyURL extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/tinyUrlRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store TinyURL Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/tinyUrlCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "tinyUrlAPIToken": "1kn2kenkdnwnrn2in1n1",
                          "tinyUrlDomain": "tiny.one"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - TinyURL"],
        "summary": "Update settings",
        "description": "Update the settings for TinyURL extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/tinyUrlRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update TinyURL Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/tinyUrlCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "tinyUrlAPIToken": "1kn2kenkdnwnrn2in1n1",
                          "tinyUrlDomain": "tiny.one"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - TinyURL"],
        "summary": "Get settings",
        "description": "Get settings for TinyURL extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get TinyURL Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/tinyUrlGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "tinyUrlAPIToken": "1kn2kenkdnwnrn2in1n1",
                          "tinyUrlDomain": "tiny.one",
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - TinyURL"],
        "summary": "Delete settings",
        "description": "Delete the settings for TinyURL extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete TinyURL Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/tinyUrlDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/intercom/v1/settings": {
      "post": {
        "tags": ["Extension - Intercom"],
        "summary": "Store settings",
        "description": "Store new settings for Intercom extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/intercomRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Intercom Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/intercomSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "appId": "212663ddb7a2a65a",
                          "customerSupportUid": "superhero2",
                          "intercomAccessToken": "EgsDdxRZFUy4tPWDjwmyZvYk",
                          "webhookURL": "https://intercom-eu.cometchat.io/v1/reply?token=8z2Yn1R2hEVmpENi7HA1pPAv0DfZvMPFT8SBSaRJgwk=eyJhcHBJZCI6IjIxMjY2M2RkYjdhMmE2NmIifQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Intercom"],
        "summary": "Update settings",
        "description": "Update the settings for Intercom extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/intercomRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Intercom Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/intercomSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "appId": "212663ddb7a2a65a",
                          "customerSupportUid": "superhero2",
                          "intercomAccessToken": "EgsDdxRZFUy4tPWDjwmyZvYk",
                          "webhookURL": "https://intercom-eu.cometchat.io/v1/reply?token=8z2Yn1R2hEVmpENi7HA1pPAv0DfZvMPFT8SBSaRJgwk=eyJhcHBJZCI6IjIxMjY2M2RkYjdhMmE2NmIifQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Intercom"],
        "summary": "Get settings",
        "description": "Get settings for Intercom extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Intercom Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/intercomGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "appId": "212663ddb7a2a65a",
                          "customerSupportUid": "superhero2",
                          "intercomAccessToken": "EgsDdxRZFUy4tPWDjwmyZvYk",
                          "webhookURL": "https://intercom-eu.cometchat.io/v1/reply?token=8z2Yn1R2hEVmpENi7HA1pPAv0DfZvMPFT8SBSaRJgwk=eyJhcHBJZCI6IjIxMjY2M2RkYjdhMmE2NmIifQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Intercom"],
        "summary": "Delete settings",
        "description": "Delete the settings for Intercom extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Intercom Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/intercomDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/url-shortener-bitly/v1/settings": {
      "post": {
        "tags": ["Extension - Bitly"],
        "summary": "Store settings",
        "description": "Store new settings for Bitly extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/bitlyRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Bitly Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/bitlyCreateSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "bitlyAccessToken": "1213n2kn2232ffg",
                          "groupGUID": "1234ddsf5eee22"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Bitly"],
        "summary": "Update settings",
        "description": "Update the settings for Bitly extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/bitlyRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Bitly Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/bitlyCreateSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "bitlyAccessToken": "1213n2kn2232ffg",
                          "groupGUID": "1234ddsf5eee22"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Bitly"],
        "summary": "Get settings",
        "description": "Get settings for Bitly extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Bitly Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/bitlyGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "bitlyAccessToken": "1213n2kn2232ffg",
                          "groupGUID": "1234ddsf5eee22",
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Bitly"],
        "summary": "Delete settings",
        "description": "Delete the settings for Bitly extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Bitly Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/bitlyDeleteSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/rich-media/v1/settings": {
      "post": {
        "tags": ["Extension - Rich media preview"],
        "summary": "Store settings",
        "description": "Store new settings for Rich media preview extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/richMediaPreviewRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Rich Media Preview Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/richMediaPreviewCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": { "iframelyApiKey": "abcd12345678" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Rich media preview"],
        "summary": "Update settings",
        "description": "Update the settings for Rich media preview extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/richMediaPreviewRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Rich Media Preview Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/richMediaPreviewCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": { "iframelyApiKey": "abcd12345678" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Rich media preview"],
        "summary": "Get settings",
        "description": "Get settings for Rich media preview extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Rich Media Preview Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/richMediaPreviewGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "iframelyApiKey": "abcd12345678",
                          "appId": "appId12345678"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Rich media preview"],
        "summary": "Delete settings",
        "description": "Delete the settings for Rich media preview extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Rich Media Preview Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/richMediaPreviewDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/virus-malware-scanner/v1/settings": {
      "post": {
        "tags": ["Extension - Virus Malware Scanner"],
        "summary": "Store settings",
        "description": "Store new settings for Virus malware scanner extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/virusMalwareScannerRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Virus Malware Scanner Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/virusMalwareScannerSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "scaniiApiKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "scaniiSecretKey": "f5c0102d"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Virus Malware Scanner"],
        "summary": "Update settings",
        "description": "Update the settings for Virus malware scanner extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/virusMalwareScannerRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Chat Widget",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/virusMalwareScannerSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "scaniiApiKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "scaniiSecretKey": "f5c0102d"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Virus Malware Scanner"],
        "summary": "Get settings",
        "description": "Get settings for Virus malware scanner extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Virus Malware Scanner Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/virusMalwareScannerGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "scaniiApiKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "scaniiSecretKey": "f5c0102d",
                          "appId": 19244939392
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Virus Malware Scanner"],
        "summary": "Delete settings",
        "description": "Delete the settings for Virus malware scanner extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Virus Malware Scanner Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/virusMalwareScannerDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/broadcast/v1/settings": {
      "post": {
        "tags": ["Extension - Video Broadcasting"],
        "summary": "Store settings",
        "description": "Store new settings for Video Broadcasting extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/videoBroadcastingRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Video broadcasting Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/videoBroadcastingSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "apiVideoKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "recordVideo": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Video Broadcasting"],
        "summary": "Update settings",
        "description": "Update the settings for Video Broadcasting extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/videoBroadcastingRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Video broadcasting Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/videoBroadcastingSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "apiVideoKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "recordVideo": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Video Broadcasting"],
        "summary": "Get settings",
        "description": "Get settings for Video Broadcasting extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Video Broadcasting Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/videoBroadcastingGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "apiVideoKey": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222",
                          "appId": "192A44939392",
                          "recordVideo": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Video Broadcasting"],
        "summary": "Delete settings",
        "description": "Delete the settings for Video Broadcasting extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Video Broadcasting Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/videoBroadcastingDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/gifs-tenor/v1/settings": {
      "post": {
        "tags": ["Extension - Tenor gifs"],
        "summary": "Store settings",
        "description": "Store new settings for Tenor gifs extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/tenorRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Tenor Gifs Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/tenorCreateSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": { "settings": { "tenorApiKey": "abcd12345678" } }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Tenor gifs"],
        "summary": "Update settings",
        "description": "Update the settings for Tenor gifs extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/tenorRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Tenor Gifs Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/tenorCreateSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": { "settings": { "tenorApiKey": "abcd12345678" } }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Tenor gifs"],
        "summary": "Get settings",
        "description": "Get settings for Tenor gifs extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Tenor Gifs Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/tenorGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "tenorApiKey": "abcd12345678",
                          "appId": "appId12345678"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Tenor gifs"],
        "summary": "Delete settings",
        "description": "Delete the settings for Tenor gifs extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Tenor Gifs Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/tenorDeleteSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/human-moderation/v1/settings": {
      "post": {
        "tags": ["Extension - In-flight message moderation"],
        "summary": "Store settings",
        "description": "Store new settings for In-flight message moderation extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/humanModerationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store In-flight message moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/humanModerationCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "allUserMessages": false,
                          "allGroupMessages": false,
                          "senders": ["superhero1", "superhero2"],
                          "receiverGroups": ["supergroup"],
                          "receiverUsers": ["superhero3"],
                          "allMessages": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - In-flight message moderation"],
        "summary": "Update settings",
        "description": "Update the settings for In-flight message moderation extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/humanModerationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update In-flight message moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/humanModerationCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "allUserMessages": false,
                          "allGroupMessages": false,
                          "senders": ["superhero1", "superhero2"],
                          "receiverGroups": ["supergroup"],
                          "receiverUsers": ["superhero3"],
                          "allMessages": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - In-flight message moderation"],
        "summary": "Get settings",
        "description": "Get settings for In-flight message moderation extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get In-flight message moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/humanModerationGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "allUserMessages": false,
                          "allGroupMessages": false,
                          "senders": ["superhero1", "superhero2"],
                          "receiverGroups": ["supergroup"],
                          "receiverUsers": ["superhero3"],
                          "allMessages": false,
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - In-flight message moderation"],
        "summary": "Delete settings",
        "description": "Delete the settings for In-flight message moderation extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete In-flight message moderation Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/humanModerationDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/e2ee/v1/settings": {
      "post": {
        "tags": ["Extension - End-to-end encryption"],
        "summary": "Store settings",
        "description": "Store new settings for End-to-end encryption extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/e2eeRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store End-to-end Encryption Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/e2eeCreateSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "virgilAppID": "virgilAppId12345678",
                          "virgilAppKeyID": "xyzabcd12345678",
                          "virgilAppKey": "abcd12345678"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - End-to-end encryption"],
        "summary": "Update settings",
        "description": "Update the settings for End-to-end encryption extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/e2eeRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update End-to-end Encryption Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/e2eeCreateSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "virgilAppID": "virgilAppId12345678",
                          "virgilAppKeyID": "xyzabcd12345678",
                          "virgilAppKey": "abcd12345678"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - End-to-end encryption"],
        "summary": "Get settings",
        "description": "Get settings for End-to-end encryption extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get End-to-end Encryption Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/e2eeGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "virgilAppID": "virgilAppId12345678",
                          "virgilAppKeyID": "xyzabcd12345678",
                          "virgilAppKey": "abcd12345678",
                          "appId": "appId12345678"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - End-to-end encryption"],
        "summary": "Delete settings",
        "description": "Delete the settings for End-to-end encryption extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete End-to-end Encryption Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/e2eeDeleteSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/stickers/v1/settings": {
      "put": {
        "tags": ["Extension - Stickers extension"],
        "summary": "Update settings",
        "description": "Update the settings for Stickers extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/stickersRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Data Masking Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/stickersResponseSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Stickers extension"],
        "summary": "Get settings",
        "description": "Get settings for Stickers extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Stickers Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/stickersGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "appId": "10419c7658224",
                          "dropMessage": false,
                          "customMasterStickersData": [],
                          "defaultMasterStickersData": [
                            {
                              "stickerName": "litt_14.png",
                              "stickerOrder": 14,
                              "stickerSetId": "7efe9cbd-7789-4095-ae37-88b144aaec70",
                              "stickerSetName": "little dyno",
                              "stickerSetOrder": 7,
                              "stickerUrl": "https://data-us.cometchat-staging.com/stickers/littledyno/litt_14.png",
                              "id": "fb24136a-abd0-4302-866d-c754410afc20",
                              "enableFlag": true
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Stickers extension"],
        "summary": "Delete settings",
        "description": "Delete the settings for Stickers extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Stickers Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/stickersResponseSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/push-notification/v1/upload-certificate-p12": {
      "post": {
        "tags": ["Extension - Push notification"],
        "summary": "Upload p12 Certificate",
        "description": "Upload a p12 Certificate",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["certificate"],
                "properties": {
                  "certificate": {
                    "description": "Upload Certificate",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query Certificate",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "properties": {
                            "statusCode": { "type": "integer" },
                            "success": { "type": "boolean" },
                            "responseTime": { "type": "integer" },
                            "body": {
                              "properties": {
                                "": {
                                  "properties": {
                                    "certificate_p12": { "type": "boolean" },
                                    "certificate_p8": { "type": "boolean" }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "body": { "certificate_p12": true, "certificate_p8": true },
                    "responseTime": 0.14275598526000977
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/push-notification/v1/upload-certificate-p8": {
      "post": {
        "tags": ["Extension - Push notification"],
        "summary": "Upload p8 Certificate",
        "description": "Upload a p8 Certificate",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["certificate"],
                "properties": {
                  "certificate": {
                    "description": "Upload Certificate",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload Certificate",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "properties": {
                            "statusCode": { "type": "integer" },
                            "success": { "type": "boolean" },
                            "responseTime": { "type": "integer" },
                            "body": {
                              "properties": {
                                "": {
                                  "properties": {
                                    "success": { "type": "boolean" }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "body": { "success": true },
                    "responseTime": 0.10614800453186035
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/push-notification/v1/query-certificates": {
      "get": {
        "tags": ["Extension - Push notification"],
        "summary": "Get Certificate",
        "description": "Get Certificate description",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Querying Certificate",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "properties": {
                            "statusCode": { "type": "integer" },
                            "success": { "type": "boolean" },
                            "responseTime": { "type": "integer" },
                            "body": {
                              "properties": {
                                "": {
                                  "properties": {
                                    "success": { "type": "boolean" }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "success": true }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/email-replies/v1/settings": {
      "post": {
        "tags": ["Extension - Email replies"],
        "summary": "Store settings",
        "description": "Store new settings for Email replies extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailRepliesRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Email Replies Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailRepliesSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "senderEmailForReplies": "mymail@example.com",
                          "sendEmailReplies": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Email replies"],
        "summary": "Update settings",
        "description": "Update the settings for Email replies extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailRepliesRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Email Replies Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailRepliesSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "senderEmailForReplies": "mymail@example.com",
                          "sendEmailReplies": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Email replies"],
        "summary": "Get settings",
        "description": "Get settings for Email replies extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Email Replies Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailRepliesGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "senderEmailForReplies": "mymail@example.com",
                          "sendEmailReplies": true,
                          "appId": 19244939392
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Email replies"],
        "summary": "Delete settings",
        "description": "Delete the settings for Email replies extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Email Replies Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailRepliesDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/sms-notification/v1/settings": {
      "post": {
        "tags": ["Extension - SMS Notification"],
        "summary": "Store settings",
        "description": "Store new settings for SMS Notification extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/smsNotificationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store SMS Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/smsNotificationSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "success": true }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - SMS Notification"],
        "summary": "Update settings",
        "description": "Update the settings for SMS Notification extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/smsNotificationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update SMS Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/smsNotificationSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "success": true }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - SMS Notification"],
        "summary": "Get settings",
        "description": "Get settings for SMS Notification extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get SMS Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/smsNotificationGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "fromMobileNo": "+123456790",
                          "messageDelay": 60,
                          "twilioAccountSid": "ACfe6c12T1G2bc530a5151a8eff4155386",
                          "twilioAuthToken": "6928f0cadd4e6Ag2d431957a7f3a563ef3",
                          "websiteURL": "somemail.com",
                          "appId": "10419c123124"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - SMS Notification"],
        "summary": "Delete settings",
        "description": "Delete the settings for SMS Notification extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete SMS Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/smsNotificationDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "success": true }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/push-notification/v1/settings": {
      "post": {
        "tags": ["Extension - Push notification"],
        "summary": "Store settings",
        "description": "Store new settings for Push notifications extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pushNotificationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Save Push Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/pushNotificationSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "version": 2,
                          "pushProvider": 0,
                          "fcmServerKey": "ABC:123:ZYX",
                          "notificationInPayload": {
                            "web": true,
                            "android": false,
                            "react_native": true,
                            "ionic_cordova": false,
                            "ios": true
                          },
                          "useP8": true,
                          "keyId": "K5FAA3122",
                          "teamId": "L5FBA3122",
                          "bundleId": "com.example.xyz",
                          "sendApnsProduction": true,
                          "sendNewMessageNotification": true,
                          "sendEditMessageNotification": true,
                          "sendDeleteMessageNotification": true,
                          "sendThreadedMessageNotification": true,
                          "sendIncomingCallNotification": true,
                          "sendMissedCallNotification": false,
                          "sendMemberJoinedNotification": true,
                          "sendMemberLeftNotification": true,
                          "sendMemberKickedNotification": true,
                          "sendMemberBannedNotification": true,
                          "sendMemberUnbannedNotification": true,
                          "sendMemberAddedNotification": true,
                          "sendMemberScopeChangedNotification": true,
                          "appId": "10419c761123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Push notification"],
        "summary": "Update settings",
        "description": "Update the settings for Push notifications extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pushNotificationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Push Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/pushNotificationSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "version": 2,
                          "pushProvider": 0,
                          "fcmServerKey": "ABC:123:ZYX",
                          "notificationInPayload": {
                            "web": true,
                            "android": false,
                            "react_native": true,
                            "ionic_cordova": false,
                            "ios": true
                          },
                          "useP8": true,
                          "keyId": "K5FAA3122",
                          "teamId": "L5FBA3122",
                          "bundleId": "com.example.xyz",
                          "sendApnsProduction": true,
                          "sendNewMessageNotification": true,
                          "sendEditMessageNotification": true,
                          "sendDeleteMessageNotification": true,
                          "sendThreadedMessageNotification": true,
                          "sendIncomingCallNotification": true,
                          "sendMissedCallNotification": false,
                          "sendMemberJoinedNotification": true,
                          "sendMemberLeftNotification": true,
                          "sendMemberKickedNotification": true,
                          "sendMemberBannedNotification": true,
                          "sendMemberUnbannedNotification": true,
                          "sendMemberAddedNotification": true,
                          "sendMemberScopeChangedNotification": true,
                          "appId": "10419c761123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Push notification"],
        "summary": "Get settings",
        "description": "Get settings for Push notifications extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Push Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/pushNotificationGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "version": 2,
                          "pushProvider": 1,
                          "fcmServerKey": "ABC:123:ZYX",
                          "notificationInPayload": {
                            "web": true,
                            "android": false,
                            "react_native": true,
                            "ionic_cordova": false,
                            "ios": true
                          },
                          "useP8": true,
                          "keyId": "K5FAA3122",
                          "teamId": "L5FBA3122",
                          "bundleId": "com.example.xyz",
                          "sendApnsProduction": true,
                          "sendNewMessageNotification": true,
                          "sendEditMessageNotification": true,
                          "sendDeleteMessageNotification": true,
                          "sendThreadedMessageNotification": true,
                          "sendIncomingCallNotification": true,
                          "sendMissedCallNotification": false,
                          "sendMemberJoinedNotification": true,
                          "sendMemberLeftNotification": true,
                          "sendMemberKickedNotification": true,
                          "sendMemberBannedNotification": true,
                          "sendMemberUnbannedNotification": true,
                          "sendMemberAddedNotification": true,
                          "sendMemberScopeChangedNotification": true,
                          "appId": "10419c761123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Push notification"],
        "summary": "Delete settings",
        "description": "Delete the settings for Push notifications extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Push Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/pushNotificationDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/chatwoot/v1/settings": {
      "post": {
        "tags": ["Extension - Chatwoot"],
        "summary": "Store settings",
        "description": "Store new settings for Chatwoot extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/chatwootRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Chatwoot Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/chatwootSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "chatwootAccessToken": "EgsXaxRZFUy4tPWDjwmyZvYk",
                          "customerSupportUid": "superhero1",
                          "chatwootInboxId": "12112",
                          "chatwootAccountId": "42113",
                          "appId": "212663ddb7a2b1b",
                          "webhookURL": "https://chatwoot-eu.cometchat.io/v1/reply?token=K1b_mZsa31lTuNQqbTo7xtRHY0y7UUqXfhsUJltruwM=.eyJhcHBJZCI6IjIxMAY2M2RkYjdhMmE2NmIifQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Chatwoot"],
        "summary": "Update settings",
        "description": "Update the settings for Chatwoot extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/chatwootRequestSchema" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Chatwoot Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/chatwootSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "appId": "212663ddb7a2b1b",
                          "chatwootAccessToken": "EgsXaxRZFUy4tPWDjwmyZvYk",
                          "customerSupportUid": "superhero1",
                          "chatwootInboxId": "12123",
                          "chatwootAccountId": "42613",
                          "webhookURL": "https://chatwoot-eu.cometchat.io/v1/reply?token=K1b_mZsa31lTuNQqbTo7xtRHY0y7UUqXfhsUJltruwM=.eyJhcHBJZCI6IjIxLjY2M2RkYjdhMmE2NmIifQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Chatwoot"],
        "summary": "Get settings",
        "description": "Get settings for Chatwoot extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Chatwoot Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/chatwootGetSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "chatwootAccountId": "12345",
                          "chatwootInboxId": "12151",
                          "appId": "212663ddb7a2b1b",
                          "chatwootAccessToken": "EgsXaxRZFUy4atPWDjwmyZvYk",
                          "customerSupportUid": "superhero1",
                          "webhookURL": "https://chatwoot-eu.cometchat.io/v1/reply?token=K1b_mZsa31lTuNQqbTo7xtRHY0y7UUqXfhsUJltruwM=.eyJhcHBJZCI6IjIxMjY2M2RkYjdhNmQ2NmIifQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Chatwoot"],
        "summary": "Delete settings",
        "description": "Delete the settings for Chatwoot extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Chatwoot Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/chatwootDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/message-shortcuts/v1/settings": {
      "post": {
        "tags": ["Extension - Message Shortcuts"],
        "summary": "Store settings",
        "description": "Store new settings for Message shortcuts extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/messageShortcutsRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Save Message Shortcuts Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/messageShortcutsSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "shortcuts": {
                            "!cu": "See you later.",
                            "!ty": "Hey! Thanks a lot! 😊",
                            "!hbd": "Happy Birthday! 🥳",
                            "!ssup": "What's up!?",
                            "!wc": "You're welcome!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Message Shortcuts"],
        "summary": "Update settings",
        "description": "Update the settings for Message shortcuts extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/messageShortcutsRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Message Shortcuts Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/messageShortcutsSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "shortcuts": {
                            "!cu": "See you later.",
                            "!ty": "Hey! Thanks a lot! 😊",
                            "!hbd": "Happy Birthday! 🥳",
                            "!ssup": "What's up!?",
                            "!wc": "You're welcome!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Message Shortcuts"],
        "summary": "Get settings",
        "description": "Get settings for Message shortcuts extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Message Shortcuts Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/messageShortcutsGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": {
                      "data": {
                        "settings": {
                          "shortcuts": {
                            "!cu": "See you later.",
                            "!ty": "Hey! Thanks a lot! 😊",
                            "!hbd": "Happy Birthday! 🥳",
                            "!ssup": "What's up!?",
                            "!wc": "You're welcome!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Message Shortcuts"],
        "summary": "Delete settings",
        "description": "Delete the settings for Message shortcuts extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Message Shortcuts Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/messageShortcutsDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 1.8547508716583252,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/email-notification/v1/settings": {
      "post": {
        "tags": ["Extension - Email Notification"],
        "summary": "Store settings",
        "description": "Store new settings for Email notification extension",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailNotificationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Email Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailNotificationRequestSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "messageDelay": 120,
                          "senderEmail": "mymail@example",
                          "senderName": "John Doe",
                          "sendGridApiKey": "key_1234",
                          "sendGridTemplateId": "Template_1234",
                          "sendGridUnsubscribeGroupId": "Group_1234",
                          "useWebhook": true,
                          "webhookURL": "http://example.com",
                          "useWebhookBasicAuth": true,
                          "webhookUsername": "username",
                          "webhookPassword": "fgh356$123ggh**"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Email Notification"],
        "summary": "Update settings",
        "description": "Update the settings for Email notification extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailNotificationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Email notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailNotificationRequestSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "messageDelay": 120,
                          "senderEmail": "mymail@example",
                          "senderName": "John Doe",
                          "sendGridApiKey": "key_1234",
                          "sendGridTemplateId": "Template_1234",
                          "sendGridUnsubscribeGroupId": "Group_1234",
                          "useWebhook": true,
                          "webhookURL": "http://example.com",
                          "useWebhookBasicAuth": true,
                          "webhookUsername": "username",
                          "webhookPassword": "fgh356$123ggh**"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Email Notification"],
        "summary": "Get settings",
        "description": "Get settings for Email notification extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Email notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailNotificationGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "messageDelay": 120,
                          "senderEmail": "mymail@example",
                          "senderName": "John Doe",
                          "sendGridApiKey": "key_1234",
                          "sendGridTemplateId": "Template_1234",
                          "sendGridUnsubscribeGroupId": "Group_1234",
                          "useWebhook": true,
                          "webhookURL": "http://example.com",
                          "useWebhookBasicAuth": true,
                          "webhookUsername": "username",
                          "webhookPassword": "fgh356$123ggh**"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Email Notification"],
        "summary": "Delete settings",
        "description": "Delete the settings for Email notification extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Email Notification Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/emailNotificationDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/collaborators": {
      "post": {
        "tags": ["Team Management"],
        "summary": "Adds/Remove collaborators",
        "description": "Adds or removes collaborators for an app.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "admins": { "type": "array", "items": { "type": "string" } },
                  "moderators": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "collaboratorsToRemove": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created App",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/teamMgmtSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "collaboratorsToRemove": [],
                    "admins": {
                      "admin1@cometchat.com": { "success": true },
                      "admin2@cometchat.com": { "success": true }
                    },
                    "developers": {
                      "developer1@cometchat.com": { "success": true }
                    },
                    "moderators": []
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Team Management"],
        "summary": "List collaborators",
        "description": "Lists all the collaborators of an app.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Created App",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "": {
                            "$ref": "#/components/schemas/teamMgmtGetSchema"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "id": "1",
                      "name": "Admin1",
                      "email": "admin1@cometchat.com",
                      "role": "admin",
                      "createdAt": 1618578628
                    },
                    {
                      "id": "2",
                      "name": "Admin2",
                      "email": "admin2@cometchat.com",
                      "role": "admin",
                      "createdAt": 1625220090
                    },
                    {
                      "id": "3",
                      "name": "Developer1",
                      "email": "developer1@cometchat.com",
                      "role": "developer",
                      "createdAt": 1625220076
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/data-masking/v1/settings": {
      "get": {
        "tags": ["Extension - Data masking"],
        "summary": "Get Settings",
        "description": "Get the settings for Data masking extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Data-Maksing Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/dataMaskingGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "appId": "10419c7658224",
                          "dropMessage": false,
                          "customregexData": [],
                          "defaultRegexData": [
                            {
                              "enableFlag": false,
                              "id": "2",
                              "name": "Emails",
                              "regex": "\\\\w+([.-]?\\\\w+)*@\\\\w+([.-]?\\\\w+)*(\\\\.\\\\w{2,10})+"
                            },
                            {
                              "enableFlag": false,
                              "id": "1",
                              "name": "US Phone numbers",
                              "regex": "[2-9]\\\\d{2}-\\\\d{3}-\\\\d{4}"
                            },
                            {
                              "enableFlag": false,
                              "id": "3",
                              "name": "SSN",
                              "regex": "\\\\d{3}-\\\\d{2}-\\\\d{4}"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Data masking"],
        "summary": "Store or update settings",
        "description": "Store or update the settings for Data masking extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataMaskingRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Data Masking Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/dataMaskingResponseSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Data masking"],
        "summary": "Delete settings",
        "description": "Delete the settings for Data masking extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Data Masking Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/dataMaskingResponseSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/extensions/profanity-filter/v1/settings": {
      "post": {
        "tags": ["Extension - Profanity-filter"],
        "summary": "Adds Settings",
        "description": "Adds settings an app.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profanityFilterRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store Profanity-filter Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/profanityFilterCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Extension - Profanity-filter"],
        "summary": "Get Settings",
        "description": "Get settings of an app.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Get Profanity-Filter  Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/profanityFilterGetSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": {
                      "data": {
                        "settings": {
                          "badwords": ["xyz"],
                          "dropMessage": false,
                          "appId": "134234d234rf33"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Extension - Profanity-filter"],
        "summary": "Update settings",
        "description": "Update the settings for Profanity-filter extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profanityFilterRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Profanity Filter Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/profanityFilterCreateSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Extension - Profanity-filter"],
        "summary": "Delete settings",
        "description": "Delete the settings for Profanity-filter extension.",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Profanity-Filter Settings",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/profanityFilterDeleteSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "statusCode": 200,
                    "success": true,
                    "responseTime": 3.061743974685669,
                    "body": { "data": { "success": true } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/webhooks": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Create Webhook",
        "description": "Creates webhook in an app.",
        "operationId": "create-webhook",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["id", "name", "webhookURL"],
                "properties": {
                  "id": {
                    "description": "Id of the Webhook.",
                    "type": "string"
                  },
                  "name": {
                    "description": "name of the Webhook.",
                    "type": "string"
                  },
                  "useBasicAuth": {
                    "description": "Boolean value for Basic Auth.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "Username of the user",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the user",
                    "type": "string"
                  },
                  "webhookURL": {
                    "description": "Webhook URL of the app",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Webhook should be enabled/ disabled",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/webhookSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": [
                  {
                    "data": {
                      "id": "test_webhook201",
                      "name": "test_webhook201",
                      "webhookURL": "https://example.com/test",
                      "createdAt": 1684141151,
                      "updatedAt": 1684141151
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Webhooks"],
        "summary": "List Webhooks",
        "description": "Lists webhooks in an app.",
        "operationId": "list-webhooks",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of webhooks to be fetched in a request. The default value is 100 and the maximum value is 1000.",
            "schema": { "type": "integer", "default": "100" }
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Searches for specified keyword in name",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List Webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "": { "$ref": "#/components/schemas/webhookSchema" }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/metaSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "id": "test_webhook201",
                      "name": "test_webhook201",
                      "webhookURL": "https://example.com/test",
                      "createdAt": 1684141151,
                      "updatedAt": 1684141151
                    }
                  ],
                  "meta": {
                    "pagination": {
                      "total": 1,
                      "count": 1,
                      "per_page": 10,
                      "current_page": 1,
                      "total_pages": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/webhooks/{webhookId}": {
      "get": {
        "tags": ["Webhooks"],
        "summary": "Get Webhook",
        "description": "Gets details of a webhook in an app.",
        "operationId": "get-webhook",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          { "$ref": "#/components/parameters/webhookId" }
        ],
        "responses": {
          "200": {
            "description": "Get Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/webhookSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "data": {
                        "id": "test_webhook201",
                        "name": "test_webhook201",
                        "webhookURL": "https://example.com/test",
                        "createdAt": 1684141151,
                        "updatedAt": 1684141151
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Webhooks"],
        "summary": "Update Webhook",
        "description": "Updates webhook details of an app.",
        "operationId": "update-webhook",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          { "$ref": "#/components/parameters/webhookId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "name of the Webhook.",
                    "type": "string"
                  },
                  "useBasicAuth": {
                    "description": "Boolean value for Basic Auth.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "Username of the user",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the user",
                    "type": "string"
                  },
                  "webhookURL": {
                    "description": "Webhook URL of the app",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Webhook should be enabled/ disabled",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/webhookSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "data": {
                        "id": "test_webhook201",
                        "name": "updated webhook",
                        "webhookURL": "https://example.com/test",
                        "createdAt": 1684141151,
                        "updatedAt": 1684145021
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Webhooks"],
        "summary": "Delete Webhook",
        "description": "Delete the webhook from an app.",
        "operationId": "delete-webhook",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          { "$ref": "#/components/parameters/webhookId" }
        ],
        "responses": {
          "200": {
            "description": "Delete Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/deleteWebhookSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "success": true,
                    "message": "Deleted Webhook successfully."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/webhooks/{webhookId}/triggers": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Add Triggers",
        "description": " Adds trigger to a webhook in an app.",
        "operationId": "add-triggers",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          { "$ref": "#/components/parameters/webhookId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "triggerIds": {
                    "description": "array of triggerIds.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enabled Triggers",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "<triggerId>": {
                          "properties": {
                            "": { "$ref": "#/components/schemas/triggerSchema" }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "message_delivery_receipt": {
                      "success": true,
                      "message": "Triggers has been added successfully."
                    },
                    "message_read_receipt": {
                      "success": true,
                      "message": "Triggers has been added successfully."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Webhooks"],
        "summary": "List Triggers",
        "description": "List triggers attached to a webhook in an app.",
        "operationId": "list-triggers",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          { "$ref": "#/components/parameters/webhookId" }
        ],
        "responses": {
          "200": {
            "description": "Enabled Triggers",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "": {
                            "$ref": "#/components/schemas/listTriggerSchema"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "meta": {
                      "properties": {
                        "": { "$ref": "#/components/schemas/metaSchema" }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": [
                    {
                      "id": "message_delivery_receipt",
                      "description": "[Beta] The hook triggers when the client chat application confirms with Cometchat servers that a message was delivered."
                    },
                    {
                      "id": "message_read_receipt",
                      "description": "[Beta] The hook triggers when the client chat application confirms with Cometchat servers that a message was read."
                    }
                  ],
                  "meta": {
                    "pagination": {
                      "total": 2,
                      "count": 2,
                      "per_page": 100,
                      "current_page": 1,
                      "total_pages": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Webhooks"],
        "summary": "Remove Triggers",
        "description": "Removes triggers from a webhook in an app.",
        "operationId": "remove-triggers",
        "parameters": [
          { "$ref": "#/components/parameters/key" },
          { "$ref": "#/components/parameters/secret" },
          { "$ref": "#/components/parameters/appId-webhooks" },
          { "$ref": "#/components/parameters/webhookId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "triggerIds": {
                    "description": "array of triggerIds.",
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enabled Triggers",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "": {
                          "$ref": "#/components/schemas/deleteWebhookSchema"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "success": true,
                    "message": "Removed trigger successfully."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "appSchema": {
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "integer" },
          "plan": { "type": "integer" },
          "trialEndsAt": { "type": "integer" },
          "state": { "type": "string" },
          "owner": { "type": "integer" },
          "region": { "type": "string" },
          "createdAt": { "type": "integer" },
          "appOwner": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "email": { "type": "string" }
            },
            "type": "object"
          },
          "appRegion": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "description": { "type": "string" }
            },
            "type": "object"
          },
          "apiKeys": {
            "properties": {
              "<API_KEY_1>": {
                "properties": {
                  "apiKey": { "type": "string" },
                  "name": { "type": "string" },
                  "scope": { "type": "string" },
                  "createdBy": { "type": "string" }
                },
                "type": "object"
              },
              "<API_KEY_2>": {
                "properties": {
                  "apiKey": { "type": "string" },
                  "name": { "type": "string" },
                  "scope": { "type": "string" },
                  "createdBy": { "type": "string" }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "bitlyCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "bitlyAccessToken": { "type": "string" },
                      "groupGUID": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "bitlyDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "bitlyGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "bitlyAccessToken": { "type": "string" },
                      "groupGUID": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "bitlyRequestSchema": {
        "properties": {
          "settings": {
            "required": ["bitlyAccessToken", "groupGUID"],
            "properties": {
              "bitlyAccessToken": {
                "description": "Used as authentication mechanism when connecting to bitly",
                "type": "string",
                "default": "1213n2kn2232ffg"
              },
              "groupGUID": {
                "description": "Used to connect to a particular group in given organisation in bitly",
                "type": "string",
                "default": "1234ddsf5eee22"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatWidgetPutSchema": {
        "properties": {
          "settings": {
            "required": ["name", "version"],
            "properties": {
              "name": {
                "description": "Name of the Chat Widget",
                "type": "string",
                "default": "Test Chat Widget"
              },
              "version": {
                "description": "Version is always v2",
                "type": "string",
                "default": "v2"
              },
              "style": {
                "required": [
                  "docked_layout_icon_background",
                  "docked_layout_icon_close",
                  "docked_layout_icon_open"
                ],
                "properties": {
                  "custom_css": {
                    "description": "Custom CSS if required",
                    "type": "string"
                  },
                  "custom_js": {
                    "description": "Custom JS if required",
                    "type": "string",
                    "default": "v2"
                  },
                  "docked_layout_icon_background": {
                    "description": "The background color for Icon in the Docked mode",
                    "type": "string",
                    "default": "#03a9f4"
                  },
                  "docked_layout_icon_close": {
                    "description": "The image to be displayed on the Docked layout icon when the Widget is closed.",
                    "type": "string",
                    "default": "https://widget-js.cometchat.io/v2/resources/chat_close.svg"
                  },
                  "docked_layout_icon_open": {
                    "description": "The image to be displayed on the Docked layout icon when the widget is opened.",
                    "type": "string",
                    "default": "https://widget-js.cometchat.io/v2/resources/chat_bubble.svg"
                  },
                  "primary_color": {
                    "description": "Primary Colour",
                    "type": "string",
                    "default": "#03A9F4"
                  },
                  "foreground_color": {
                    "description": "Foreground Colour",
                    "type": "string",
                    "default": " #000000"
                  },
                  "background_color": {
                    "description": "Background Colour",
                    "type": "string",
                    "default": "#FFFFFF"
                  },
                  "override_system_background_colors": {
                    "description": "Override System Background Colours",
                    "type": "boolean",
                    "default": true
                  }
                },
                "type": "object"
              },
              "sidebar": {
                "required": [
                  "users",
                  "groups",
                  "calls",
                  "recent_chat_listing",
                  "user_listing",
                  "sidebar_navigation_sequence"
                ],
                "properties": {
                  "chats": {
                    "description": "Show Chats section in the Sidebar",
                    "type": "boolean",
                    "default": true
                  },
                  "users": {
                    "description": "Show Users section in the Sidebar",
                    "type": "boolean",
                    "default": true
                  },
                  "groups": {
                    "description": "Show Groups section in the Sidebar",
                    "type": "boolean",
                    "default": true
                  },
                  "calls": {
                    "description": "Show Calls section in the Sidebar",
                    "type": "boolean"
                  },
                  "user_settings": {
                    "description": "Show User Settings section in the Sidebar",
                    "type": "boolean"
                  },
                  "recent_chat_listing": {
                    "description": "Which chats should be displayed in the Recent chat section",
                    "type": "string",
                    "default": "all_chats"
                  },
                  "user_listing": {
                    "description": "Which users should be displayed in the User list",
                    "type": "string",
                    "default": "all_users"
                  },
                  "sidebar_navigation_sequence": {
                    "description": "Order of sections in Sidebar. Do not add any new values.",
                    "type": "array",
                    "items": { "type": "string" },
                    "default": ["chats", "users", "groups", "calls", "settings"]
                  }
                },
                "type": "object"
              },
              "main": {
                "required": [
                  "allow_creating_polls",
                  "allow_delete_groups",
                  "allow_kick_ban_members",
                  "allow_message_reactions",
                  "allow_moderator_to_delete_member_messages",
                  "allow_promote_demote_members",
                  "block_user",
                  "create_groups",
                  "enable_collaborative_document",
                  "enable_collaborative_whiteboard",
                  "enable_deleting_messages",
                  "enable_editing_messages",
                  "enable_message_translation",
                  "enable_sending_messages",
                  "enable_sound_for_calls",
                  "enable_sound_for_messages",
                  "enable_threaded_replies",
                  "enable_video_calling",
                  "enable_voice_calling",
                  "hide_deleted_messages",
                  "hide_join_leave_notifications",
                  "join_or_leave_groups",
                  "send_emojis",
                  "send_message_in_private_to_group_member",
                  "send_photos_videos",
                  "share_live_reactions",
                  "show_call_notifications",
                  "show_delivery_read_indicators",
                  "show_emojis_in_larger_size"
                ],
                "properties": {
                  "allow_add_members": {
                    "description": "Allow adding new group members",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_creating_polls": {
                    "description": "Enable Polls extension to allow sending polls",
                    "type": "boolean"
                  },
                  "allow_delete_groups": {
                    "description": "Allow deletion of groups",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_kick_ban_members": {
                    "description": "Allow kick/ban group member actions",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_message_reactions": {
                    "description": "Enable Reactions extension to allow reactions to messages",
                    "type": "boolean"
                  },
                  "allow_moderator_to_delete_member_messages": {
                    "description": "Allow moderators to delete messages from group",
                    "type": "boolean"
                  },
                  "allow_promote_demote_members": {
                    "description": "Allow changing scopes of group members",
                    "type": "boolean"
                  },
                  "block_user": {
                    "description": "Allow blocking a user",
                    "type": "boolean",
                    "default": true
                  },
                  "create_groups": {
                    "description": "Allow creating new groups",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_collaborative_document": {
                    "description": "Enable Collaborative Document extension before enabling this",
                    "type": "boolean"
                  },
                  "enable_collaborative_whiteboard": {
                    "description": "Enable Collaborative Whiteboard extension before enabling this.",
                    "type": "boolean"
                  },
                  "enable_deleting_messages": {
                    "description": "Allow deletion of messages from chats",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_editing_messages": {
                    "description": "Allow edition of messages from chats",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_message_translation": {
                    "description": "Enable Message translation extension before enabling this.",
                    "type": "boolean"
                  },
                  "enable_sending_messages": {
                    "description": "Allow sending messages",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_sound_for_calls": {
                    "description": "Play sound for incoming calls",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_sound_for_messages": {
                    "description": "Play sound for incoming messages",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_threaded_replies": {
                    "description": "Allow creation of message threads",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_video_calling": {
                    "description": "Enable video calling",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_voice_calling": {
                    "description": "Enable voice calling",
                    "type": "boolean",
                    "default": true
                  },
                  "hide_deleted_messages": {
                    "description": "Hide message bubbles for deleted messages",
                    "type": "boolean",
                    "default": true
                  },
                  "hide_join_leave_notifications": {
                    "description": "Hide the notifications in chat when someone joins or leaves a group",
                    "type": "boolean",
                    "default": true
                  },
                  "join_or_leave_groups": {
                    "description": "Allow joining/leaving groups",
                    "type": "boolean",
                    "default": true
                  },
                  "send_emojis": {
                    "description": "Show the emojis keyboard",
                    "type": "boolean",
                    "default": true
                  },
                  "send_files": {
                    "description": "Allow sending files in chats",
                    "type": "boolean",
                    "default": true
                  },
                  "send_message_in_private_to_group_member": {
                    "description": "Allow sending private messages to group members",
                    "type": "boolean"
                  },
                  "send_photos_videos": {
                    "description": "Allow sending Photos and Videos in chat",
                    "type": "boolean",
                    "default": true
                  },
                  "share_live_reactions": {
                    "description": "Allow sending Live Reactions",
                    "type": "boolean",
                    "default": true
                  },
                  "show_call_notifications": {
                    "description": "Show notification for incoming calls",
                    "type": "boolean",
                    "default": true
                  },
                  "show_delivery_read_indicators": {
                    "description": "Show delivery and read receipts",
                    "type": "boolean",
                    "default": true
                  },
                  "show_emojis_in_larger_size": {
                    "description": "Display larger emojis when sending one, two or three in a message.",
                    "type": "boolean",
                    "default": true
                  },
                  "show_stickers": {
                    "description": "Enable Stickers extension before enabling this",
                    "type": "boolean",
                    "default": true
                  },
                  "show_typing_indicators": {
                    "description": "Show typing... indicators in chats",
                    "type": "boolean"
                  },
                  "show_user_presence": {
                    "description": "Show user preferences",
                    "type": "boolean",
                    "default": true
                  },
                  "view_group_members": {
                    "description": "Allow viewing group members",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_mention_members": {
                    "description": "Allow Mention Members",
                    "type": "boolean",
                    "default": false
                  },
                  "enable_replying_to_messages": {
                    "description": "Enable Replying To Messages",
                    "type": "boolean",
                    "default": false
                  },
                  "enable_share_copy_forward_messages": {
                    "description": "Enable Share Copy Forward Messages",
                    "type": "boolean",
                    "default": false
                  },
                  "highlight_messages_from_moderators": {
                    "description": "Highlight Messages From Moderators",
                    "type": "boolean",
                    "default": false
                  },
                  "show_call_recording_option": {
                    "description": "Show Call Recording Option",
                    "type": "boolean",
                    "default": false
                  },
                  "send_voice_notes": {
                    "description": "Send Voice Notes",
                    "type": "boolean",
                    "default": false
                  },
                  "send_gifs": {
                    "description": "Send Gifs",
                    "type": "boolean",
                    "default": false
                  },
                  "share_location": {
                    "description": "Share Location",
                    "type": "boolean",
                    "default": false
                  },
                  "view_shared_media": {
                    "description": "Allow viewing all Shared media in a group",
                    "type": "boolean",
                    "default": true
                  },
                  "set_groups_in_qna_mode_by_moderators": {
                    "description": "Set Groups In Qna Mode By Moderators",
                    "type": "boolean",
                    "default": false
                  },
                  "send_reply_in_private_to_group_member": {
                    "description": "Send Reply In Private To Group Member",
                    "type": "boolean",
                    "default": false
                  }
                },
                "type": "object"
              },
              "appId": {
                "description": "Cometchat appid",
                "type": "string",
                "default": "564663ddb71bbb"
              },
              "widgetId": {
                "description": "Widget Id that need to modify",
                "type": "string",
                "default": "9af42f42-2f27-456d-9bfc-d77c29ec67bc"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatWidgetRequestSchema": {
        "properties": {
          "settings": {
            "required": ["name", "version"],
            "properties": {
              "name": {
                "description": "Name of the Chat Widget",
                "type": "string",
                "default": "Test Chat Widget"
              },
              "version": {
                "description": "Version is always v2",
                "type": "string",
                "default": "v2"
              },
              "style": {
                "required": [
                  "docked_layout_icon_background",
                  "docked_layout_icon_close",
                  "docked_layout_icon_open"
                ],
                "properties": {
                  "custom_css": {
                    "description": "Custom CSS if required",
                    "type": "string"
                  },
                  "custom_js": {
                    "description": "Custom JS if required",
                    "type": "string",
                    "default": "v2"
                  },
                  "docked_layout_icon_background": {
                    "description": "The background color for Icon in the Docked mode",
                    "type": "string",
                    "default": "#03a9f4"
                  },
                  "docked_layout_icon_close": {
                    "description": "The image to be displayed on the Docked layout icon when the Widget is closed.",
                    "type": "string",
                    "default": "https://widget-js.cometchat.io/v2/resources/chat_close.svg"
                  },
                  "docked_layout_icon_open": {
                    "description": "The image to be displayed on the Docked layout icon when the widget is opened.",
                    "type": "string",
                    "default": "https://widget-js.cometchat.io/v2/resources/chat_bubble.svg"
                  },
                  "primary_color": {
                    "description": "Primary Colour",
                    "type": "string",
                    "default": "#03A9F4"
                  },
                  "foreground_color": {
                    "description": "Foreground Colour",
                    "type": "string",
                    "default": " #000000"
                  },
                  "background_color": {
                    "description": "Background Colour",
                    "type": "string",
                    "default": "#FFFFFF"
                  },
                  "override_system_background_colors": {
                    "description": "Override System Background Colours",
                    "type": "boolean",
                    "default": true
                  }
                },
                "type": "object"
              },
              "sidebar": {
                "required": [
                  "users",
                  "groups",
                  "calls",
                  "recent_chat_listing",
                  "user_listing",
                  "sidebar_navigation_sequence"
                ],
                "properties": {
                  "chats": {
                    "description": "Show Chats section in the Sidebar",
                    "type": "boolean",
                    "default": true
                  },
                  "users": {
                    "description": "Show Users section in the Sidebar",
                    "type": "boolean",
                    "default": true
                  },
                  "groups": {
                    "description": "Show Groups section in the Sidebar",
                    "type": "boolean",
                    "default": true
                  },
                  "calls": {
                    "description": "Show Calls section in the Sidebar",
                    "type": "boolean"
                  },
                  "user_settings": {
                    "description": "Show User Settings section in the Sidebar",
                    "type": "boolean"
                  },
                  "recent_chat_listing": {
                    "description": "Which chats should be displayed in the Recent chat section",
                    "type": "string",
                    "default": "all_chats"
                  },
                  "user_listing": {
                    "description": "Which users should be displayed in the User list",
                    "type": "string",
                    "default": "all_users"
                  },
                  "sidebar_navigation_sequence": {
                    "description": "Order of sections in Sidebar. Do not add any new values.",
                    "type": "array",
                    "items": { "type": "string" },
                    "default": ["chats", "users", "groups", "calls", "settings"]
                  },
                  "start_a_new_conversation": {
                    "description": "Start a new Conversation",
                    "type": "string",
                    "default": "all_chats"
                  },
                  "group_listing": {
                    "description": "Group Listing",
                    "type": "string",
                    "default": "public_and_password_protected_groups"
                  }
                },
                "type": "object"
              },
              "main": {
                "required": [
                  "allow_creating_polls",
                  "allow_delete_groups",
                  "allow_kick_ban_members",
                  "allow_message_reactions",
                  "allow_moderator_to_delete_member_messages",
                  "allow_promote_demote_members",
                  "block_user",
                  "create_groups",
                  "enable_collaborative_document",
                  "enable_collaborative_whiteboard",
                  "enable_deleting_messages",
                  "enable_editing_messages",
                  "enable_message_translation",
                  "enable_sending_messages",
                  "enable_sound_for_calls",
                  "enable_sound_for_messages",
                  "enable_threaded_replies",
                  "enable_video_calling",
                  "enable_voice_calling",
                  "hide_deleted_messages",
                  "hide_join_leave_notifications",
                  "join_or_leave_groups",
                  "send_emojis",
                  "send_message_in_private_to_group_member",
                  "send_photos_videos",
                  "share_live_reactions",
                  "show_call_notifications",
                  "show_delivery_read_indicators",
                  "show_emojis_in_larger_size"
                ],
                "properties": {
                  "allow_add_members": {
                    "description": "Allow adding new group members",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_creating_polls": {
                    "description": "Enable Polls extension to allow sending polls",
                    "type": "boolean"
                  },
                  "allow_delete_groups": {
                    "description": "Allow deletion of groups",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_kick_ban_members": {
                    "description": "Allow kick/ban group member actions",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_message_reactions": {
                    "description": "Enable Reactions extension to allow reactions to messages",
                    "type": "boolean"
                  },
                  "allow_moderator_to_delete_member_messages": {
                    "description": "Allow moderators to delete messages from group",
                    "type": "boolean"
                  },
                  "allow_promote_demote_members": {
                    "description": "Allow changing scopes of group members",
                    "type": "boolean"
                  },
                  "block_user": {
                    "description": "Allow blocking a user",
                    "type": "boolean",
                    "default": true
                  },
                  "create_groups": {
                    "description": "Allow creating new groups",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_collaborative_document": {
                    "description": "Enable Collaborative Document extension before enabling this",
                    "type": "boolean"
                  },
                  "enable_collaborative_whiteboard": {
                    "description": "Enable Collaborative Whiteboard extension before enabling this.",
                    "type": "boolean"
                  },
                  "enable_deleting_messages": {
                    "description": "Allow deletion of messages from chats",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_editing_messages": {
                    "description": "Allow edition of messages from chats",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_message_translation": {
                    "description": "Enable Message translation extension before enabling this.",
                    "type": "boolean"
                  },
                  "enable_sending_messages": {
                    "description": "Allow sending messages",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_sound_for_calls": {
                    "description": "Play sound for incoming calls",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_sound_for_messages": {
                    "description": "Play sound for incoming messages",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_threaded_replies": {
                    "description": "Allow creation of message threads",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_video_calling": {
                    "description": "Enable video calling",
                    "type": "boolean",
                    "default": true
                  },
                  "enable_voice_calling": {
                    "description": "Enable voice calling",
                    "type": "boolean",
                    "default": true
                  },
                  "hide_deleted_messages": {
                    "description": "Hide message bubbles for deleted messages",
                    "type": "boolean",
                    "default": true
                  },
                  "hide_join_leave_notifications": {
                    "description": "Hide the notifications in chat when someone joins or leaves a group",
                    "type": "boolean",
                    "default": true
                  },
                  "join_or_leave_groups": {
                    "description": "Allow joining/leaving groups",
                    "type": "boolean",
                    "default": true
                  },
                  "send_emojis": {
                    "description": "Show the emojis keyboard",
                    "type": "boolean",
                    "default": true
                  },
                  "send_files": {
                    "description": "Allow sending files in chats",
                    "type": "boolean",
                    "default": true
                  },
                  "send_message_in_private_to_group_member": {
                    "description": "Allow sending private messages to group members",
                    "type": "boolean"
                  },
                  "send_photos_videos": {
                    "description": "Allow sending Photos and Videos in chat",
                    "type": "boolean",
                    "default": true
                  },
                  "share_live_reactions": {
                    "description": "Allow sending Live Reactions",
                    "type": "boolean",
                    "default": true
                  },
                  "show_call_notifications": {
                    "description": "Show notification for incoming calls",
                    "type": "boolean",
                    "default": true
                  },
                  "show_delivery_read_indicators": {
                    "description": "Show delivery and read receipts",
                    "type": "boolean",
                    "default": true
                  },
                  "show_emojis_in_larger_size": {
                    "description": "Display larger emojis when sending one, two or three in a message.",
                    "type": "boolean",
                    "default": true
                  },
                  "show_stickers": {
                    "description": "Enable Stickers extension before enabling this",
                    "type": "boolean",
                    "default": true
                  },
                  "show_typing_indicators": {
                    "description": "Show typing... indicators in chats",
                    "type": "boolean"
                  },
                  "show_user_presence": {
                    "description": "Show user preferences",
                    "type": "boolean",
                    "default": true
                  },
                  "view_group_members": {
                    "description": "Allow viewing group members",
                    "type": "boolean",
                    "default": true
                  },
                  "allow_mention_members": {
                    "description": "Allow Mention Members",
                    "type": "boolean",
                    "default": false
                  },
                  "enable_replying_to_messages": {
                    "description": "Enable Replying To Messages",
                    "type": "boolean",
                    "default": false
                  },
                  "enable_share_copy_forward_messages": {
                    "description": "Enable Share Copy Forward Messages",
                    "type": "boolean",
                    "default": false
                  },
                  "highlight_messages_from_moderators": {
                    "description": "Highlight Messages From Moderators",
                    "type": "boolean",
                    "default": false
                  },
                  "show_call_recording_option": {
                    "description": "Show Call Recording Option",
                    "type": "boolean",
                    "default": false
                  },
                  "send_voice_notes": {
                    "description": "Send Voice Notes",
                    "type": "boolean",
                    "default": false
                  },
                  "send_gifs": {
                    "description": "Send Gifs",
                    "type": "boolean",
                    "default": false
                  },
                  "share_location": {
                    "description": "Share Location",
                    "type": "boolean",
                    "default": false
                  },
                  "view_shared_media": {
                    "description": "Allow viewing all Shared media in a group",
                    "type": "boolean",
                    "default": true
                  },
                  "set_groups_in_qna_mode_by_moderators": {
                    "description": "Set Groups In Qna Mode By Moderators",
                    "type": "boolean",
                    "default": false
                  },
                  "send_reply_in_private_to_group_member": {
                    "description": "Send Reply In Private To Group Member",
                    "type": "boolean",
                    "default": false
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatWidgetResponseSchema": {
        "properties": {
          "data": {
            "properties": {
              "statusCode": { "type": "integer" },
              "success": { "type": "boolean" },
              "responseTime": { "type": "integer" },
              "body": {
                "properties": {
                  "data": {
                    "properties": {
                      "configuration": {
                        "type": "array",
                        "items": {
                          "required": ["name", "version"],
                          "properties": {
                            "name": {
                              "description": "Name of the Chat Widget",
                              "type": "string",
                              "default": "Test Chat Widget"
                            },
                            "version": {
                              "description": "Version is always v2",
                              "type": "string",
                              "default": "v2"
                            },
                            "style": {
                              "required": [
                                "docked_layout_icon_background",
                                "docked_layout_icon_close",
                                "docked_layout_icon_open"
                              ],
                              "properties": {
                                "custom_css": {
                                  "description": "Custom CSS if required",
                                  "type": "string"
                                },
                                "custom_js": {
                                  "description": "Custom JS if required",
                                  "type": "string",
                                  "default": "v2"
                                },
                                "docked_layout_icon_background": {
                                  "description": "The background color for Icon in the Docked mode",
                                  "type": "string",
                                  "default": "#03a9f4"
                                },
                                "docked_layout_icon_close": {
                                  "description": "The image to be displayed on the Docked layout icon when the Widget is closed.",
                                  "type": "string",
                                  "default": "https://widget-js.cometchat.io/v2/resources/chat_close.svg"
                                },
                                "docked_layout_icon_open": {
                                  "description": "The image to be displayed on the Docked layout icon when the widget is opened.",
                                  "type": "string",
                                  "default": "https://widget-js.cometchat.io/v2/resources/chat_bubble.svg"
                                },
                                "primary_color": {
                                  "description": "Primary Colour",
                                  "type": "string",
                                  "default": "#03A9F4"
                                },
                                "foreground_color": {
                                  "description": "Foreground Colour",
                                  "type": "string",
                                  "default": " #000000"
                                },
                                "background_color": {
                                  "description": "Background Colour",
                                  "type": "string",
                                  "default": "#FFFFFF"
                                },
                                "override_system_background_colors": {
                                  "description": "Override System Background Colours",
                                  "type": "boolean",
                                  "default": true
                                }
                              },
                              "type": "object"
                            },
                            "sidebar": {
                              "required": [
                                "users",
                                "groups",
                                "calls",
                                "recent_chat_listing",
                                "user_listing",
                                "sidebar_navigation_sequence"
                              ],
                              "properties": {
                                "chats": {
                                  "description": "Show Chats section in the Sidebar",
                                  "type": "boolean",
                                  "default": true
                                },
                                "users": {
                                  "description": "Show Users section in the Sidebar",
                                  "type": "boolean",
                                  "default": true
                                },
                                "groups": {
                                  "description": "Show Groups section in the Sidebar",
                                  "type": "boolean",
                                  "default": true
                                },
                                "calls": {
                                  "description": "Show Calls section in the Sidebar",
                                  "type": "boolean"
                                },
                                "user_settings": {
                                  "description": "Show User Settings section in the Sidebar",
                                  "type": "boolean"
                                },
                                "recent_chat_listing": {
                                  "description": "Which chats should be displayed in the Recent chat section",
                                  "type": "string",
                                  "default": "all_chats"
                                },
                                "user_listing": {
                                  "description": "Which users should be displayed in the User list",
                                  "type": "string",
                                  "default": "all_users"
                                },
                                "sidebar_navigation_sequence": {
                                  "description": "Order of sections in Sidebar. Do not add any new values.",
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "default": [
                                    "chats",
                                    "users",
                                    "groups",
                                    "calls",
                                    "settings"
                                  ]
                                },
                                "start_a_new_conversation": {
                                  "description": "Start a new Conversation",
                                  "type": "string",
                                  "default": "all_chats"
                                },
                                "group_listing": {
                                  "description": "Group Listing",
                                  "type": "string",
                                  "default": "public_and_password_protected_groups"
                                }
                              },
                              "type": "object"
                            },
                            "main": {
                              "required": [
                                "allow_creating_polls",
                                "allow_delete_groups",
                                "allow_kick_ban_members",
                                "allow_message_reactions",
                                "allow_moderator_to_delete_member_messages",
                                "allow_promote_demote_members",
                                "block_user",
                                "create_groups",
                                "enable_collaborative_document",
                                "enable_collaborative_whiteboard",
                                "enable_deleting_messages",
                                "enable_editing_messages",
                                "enable_message_translation",
                                "enable_sending_messages",
                                "enable_sound_for_calls",
                                "enable_sound_for_messages",
                                "enable_threaded_replies",
                                "enable_video_calling",
                                "enable_voice_calling",
                                "hide_deleted_messages",
                                "hide_join_leave_notifications",
                                "join_or_leave_groups",
                                "send_emojis",
                                "send_message_in_private_to_group_member",
                                "send_photos_videos",
                                "share_live_reactions",
                                "show_call_notifications",
                                "show_delivery_read_indicators",
                                "show_emojis_in_larger_size"
                              ],
                              "properties": {
                                "allow_add_members": {
                                  "description": "Allow adding new group members",
                                  "type": "boolean",
                                  "default": true
                                },
                                "allow_creating_polls": {
                                  "description": "Enable Polls extension to allow sending polls",
                                  "type": "boolean"
                                },
                                "allow_delete_groups": {
                                  "description": "Allow deletion of groups",
                                  "type": "boolean",
                                  "default": true
                                },
                                "allow_kick_ban_members": {
                                  "description": "Allow kick/ban group member actions",
                                  "type": "boolean",
                                  "default": true
                                },
                                "allow_message_reactions": {
                                  "description": "Enable Reactions extension to allow reactions to messages",
                                  "type": "boolean"
                                },
                                "allow_moderator_to_delete_member_messages": {
                                  "description": "Allow moderators to delete messages from group",
                                  "type": "boolean"
                                },
                                "allow_promote_demote_members": {
                                  "description": "Allow changing scopes of group members",
                                  "type": "boolean"
                                },
                                "block_user": {
                                  "description": "Allow blocking a user",
                                  "type": "boolean",
                                  "default": true
                                },
                                "create_groups": {
                                  "description": "Allow creating new groups",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_collaborative_document": {
                                  "description": "Enable Collaborative Document extension before enabling this",
                                  "type": "boolean"
                                },
                                "enable_collaborative_whiteboard": {
                                  "description": "Enable Collaborative Whiteboard extension before enabling this.",
                                  "type": "boolean"
                                },
                                "enable_deleting_messages": {
                                  "description": "Allow deletion of messages from chats",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_editing_messages": {
                                  "description": "Allow edition of messages from chats",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_message_translation": {
                                  "description": "Enable Message translation extension before enabling this.",
                                  "type": "boolean"
                                },
                                "enable_sending_messages": {
                                  "description": "Allow sending messages",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_sound_for_calls": {
                                  "description": "Play sound for incoming calls",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_sound_for_messages": {
                                  "description": "Play sound for incoming messages",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_threaded_replies": {
                                  "description": "Allow creation of message threads",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_video_calling": {
                                  "description": "Enable video calling",
                                  "type": "boolean",
                                  "default": true
                                },
                                "enable_voice_calling": {
                                  "description": "Enable voice calling",
                                  "type": "boolean",
                                  "default": true
                                },
                                "hide_deleted_messages": {
                                  "description": "Hide message bubbles for deleted messages",
                                  "type": "boolean",
                                  "default": true
                                },
                                "hide_join_leave_notifications": {
                                  "description": "Hide the notifications in chat when someone joins or leaves a group",
                                  "type": "boolean",
                                  "default": true
                                },
                                "join_or_leave_groups": {
                                  "description": "Allow joining/leaving groups",
                                  "type": "boolean",
                                  "default": true
                                },
                                "send_emojis": {
                                  "description": "Show the emojis keyboard",
                                  "type": "boolean",
                                  "default": true
                                },
                                "send_files": {
                                  "description": "Allow sending files in chats",
                                  "type": "boolean",
                                  "default": true
                                },
                                "send_message_in_private_to_group_member": {
                                  "description": "Allow sending private messages to group members",
                                  "type": "boolean"
                                },
                                "send_photos_videos": {
                                  "description": "Allow sending Photos and Videos in chat",
                                  "type": "boolean",
                                  "default": true
                                },
                                "share_live_reactions": {
                                  "description": "Allow sending Live Reactions",
                                  "type": "boolean",
                                  "default": true
                                },
                                "show_call_notifications": {
                                  "description": "Show notification for incoming calls",
                                  "type": "boolean",
                                  "default": true
                                },
                                "show_delivery_read_indicators": {
                                  "description": "Show delivery and read receipts",
                                  "type": "boolean",
                                  "default": true
                                },
                                "show_emojis_in_larger_size": {
                                  "description": "Display larger emojis when sending one, two or three in a message.",
                                  "type": "boolean",
                                  "default": true
                                },
                                "show_stickers": {
                                  "description": "Enable Stickers extension before enabling this",
                                  "type": "boolean",
                                  "default": true
                                },
                                "show_typing_indicators": {
                                  "description": "Show typing... indicators in chats",
                                  "type": "boolean"
                                },
                                "show_user_presence": {
                                  "description": "Show user preferences",
                                  "type": "boolean",
                                  "default": true
                                },
                                "view_group_members": {
                                  "description": "Allow viewing group members",
                                  "type": "boolean",
                                  "default": true
                                },
                                "allow_mention_members": {
                                  "description": "Allow Mention Members",
                                  "type": "boolean",
                                  "default": false
                                },
                                "enable_replying_to_messages": {
                                  "description": "Enable Replying To Messages",
                                  "type": "boolean",
                                  "default": false
                                },
                                "enable_share_copy_forward_messages": {
                                  "description": "Enable Share Copy Forward Messages",
                                  "type": "boolean",
                                  "default": false
                                },
                                "highlight_messages_from_moderators": {
                                  "description": "Highlight Messages From Moderators",
                                  "type": "boolean",
                                  "default": false
                                },
                                "show_call_recording_option": {
                                  "description": "Show Call Recording Option",
                                  "type": "boolean",
                                  "default": false
                                },
                                "send_voice_notes": {
                                  "description": "Send Voice Notes",
                                  "type": "boolean",
                                  "default": false
                                },
                                "send_gifs": {
                                  "description": "Send Gifs",
                                  "type": "boolean",
                                  "default": false
                                },
                                "share_location": {
                                  "description": "Share Location",
                                  "type": "boolean",
                                  "default": false
                                },
                                "view_shared_media": {
                                  "description": "Allow viewing all Shared media in a group",
                                  "type": "boolean",
                                  "default": true
                                },
                                "set_groups_in_qna_mode_by_moderators": {
                                  "description": "Set Groups In Qna Mode By Moderators",
                                  "type": "boolean",
                                  "default": false
                                },
                                "send_reply_in_private_to_group_member": {
                                  "description": "Send Reply In Private To Group Member",
                                  "type": "boolean",
                                  "default": false
                                }
                              },
                              "type": "object"
                            },
                            "appId": {
                              "description": "Cometchat appid",
                              "type": "string",
                              "default": "564663ddb71bbb"
                            },
                            "widgetId": {
                              "description": "Widget Id that need to modify",
                              "type": "string",
                              "default": "9af42f42-2f27-456d-9bfc-d77c29ec67bc"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatWidgetSchema": {
        "properties": {
          "enabled": {
            "properties": {
              "extention_id1": {
                "properties": {
                  "success": { "type": "boolean" },
                  "message": { "type": "string" }
                },
                "type": "object"
              },
              "extention_id2": {
                "properties": {
                  "success": { "type": "boolean" },
                  "message": { "type": "string" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "disabled": {
            "properties": {
              "extention_id3": {
                "properties": {
                  "success": { "type": "boolean" },
                  "message": { "type": "string" }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatwootDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatwootGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "appId": { "type": "string" },
                      "customerSupportUid": { "type": "string" },
                      "chatwootAccountId": { "type": "string" },
                      "chatwootInboxId": { "type": "string" },
                      "chatwootAccessToken": { "type": "string" },
                      "webhookURL": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatwootRequestSchema": {
        "properties": {
          "settings": {
            "required": [
              "chatwootAccessToken",
              "chatwootAccountId",
              "chatwootInboxId",
              "customerSupportUid"
            ],
            "properties": {
              "chatwootAccessToken": {
                "description": "For connecting and exchanging messages between CometChat and chatwoot",
                "type": "string",
                "default": "EgsDdxRZFUy4tPWDjwmyZaYk"
              },
              "chatwootAccountId": {
                "description": "Obtained from Chatwoot profile settings",
                "type": "string",
                "default": "12123"
              },
              "chatwootInboxId": {
                "description": "Obtained from Chatwoot inbox settings",
                "type": "string",
                "default": "12345"
              },
              "customerSupportUid": {
                "description": "Customer support uid that you have selected",
                "type": "string",
                "default": "superhero2"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "chatwootSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "appId": { "type": "string" },
                      "customerSupportUid": { "type": "string" },
                      "chatwootAccountId": { "type": "string" },
                      "chatwootInboxId": { "type": "string" },
                      "chatwootAccessToken": { "type": "string" },
                      "webhookURL": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "dataMaskingGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "dropMessage": { "type": "boolean" },
                      "customregexData": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": { "type": "string" },
                            "regex": { "type": "string" },
                            "id": { "type": "string" }
                          },
                          "type": "object"
                        }
                      },
                      "defaultRegexData": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": { "type": "string" },
                            "regex": { "type": "string" },
                            "id": { "type": "string" },
                            "enableFlag": { "type": "boolean" }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "dataMaskingRequestSchema": {
        "properties": {
          "settings": {
            "required": [
              "dropMessage",
              "customregexData",
              "defaultRegexData",
              "deleteCustomRegexData"
            ],
            "properties": {
              "dropMessage": {
                "description": "Should drop message in case of sensitive information?",
                "type": "boolean",
                "default": false
              },
              "defaultRegexData": {
                "description": "Configure the default masks",
                "type": "array",
                "items": { "type": "object" },
                "default": [
                  {
                    "enableFlag": false,
                    "id": "1",
                    "name": "US Phone numbers",
                    "regex": "[2-9]\\\\d{2}-\\\\d{3}-\\\\d{4}"
                  },
                  {
                    "enableFlag": false,
                    "id": "2",
                    "name": "Emails",
                    "regex": "\\\\w+([.-]?\\\\w+)*@\\\\w+([.-]?\\\\w+)*(\\\\.\\\\w{2,10})+"
                  },
                  {
                    "enableFlag": false,
                    "id": "3",
                    "name": "SSN",
                    "regex": "\\\\d{3}-\\\\d{2}-\\\\d{4}"
                  }
                ]
              },
              "customregexData": {
                "description": "Configure the custom masks",
                "type": "array",
                "items": { "type": "object" },
                "default": [{ "name": "one", "regex": "one", "id": "1983958" }]
              },
              "deleteCustomRegexData": {
                "description": "Remove custom masks by ID",
                "type": "array",
                "items": { "type": "string" },
                "default": ["9393903"]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "dataMaskingResponseSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "deleteAppSchema": {
        "properties": {
          "success": { "type": "boolean" },
          "scheduledToDeleteAt": { "type": "integer" }
        },
        "type": "object"
      },
      "deleteSchema": {
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "type": "object"
      },
      "deleteWebhookSchema": {
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "type": "object"
      },
      "e2eeCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "virgilAppID": { "type": "string" },
                      "virgilAppKeyID": { "type": "string" },
                      "virgilAppKey": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "e2eeDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "e2eeGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "virgilAppID": { "type": "string" },
                      "virgilAppKeyID": { "type": "string" },
                      "virgilAppKey": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "e2eeRequestSchema": {
        "properties": {
          "settings": {
            "required": ["virgilAppID", "virgilAppKeyID", "virgilAppKey"],
            "properties": {
              "virgilAppID": {
                "description": "Virgil App Id obtained from their Dashboard",
                "type": "string",
                "default": "virgilAppId12345678"
              },
              "virgilAppKeyID": {
                "description": "Virgil App Key Id obtained from their Dashboard",
                "type": "string",
                "default": "xyzabcd12345678"
              },
              "virgilAppKey": {
                "description": "Virgil App Key obtained from their Dashboard",
                "type": "string",
                "default": "abcd12345678"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailNotificationDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailNotificationGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "sendGridApiKey": {
                        "description": "Sendgrid API key",
                        "type": "string",
                        "default": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
                      },
                      "messageDelay": {
                        "description": "Time Interval after which notifications will be sent",
                        "type": "number",
                        "default": 120
                      },
                      "senderEmail": {
                        "description": "Sendgrid Sender Email for Notification",
                        "type": "string",
                        "default": "mymail@example.com"
                      },
                      "senderName": {
                        "description": "Sendgrid Sender Name",
                        "type": "string",
                        "default": "John Doe"
                      },
                      "sendGridTemplateId": {
                        "description": "Send Grid Template",
                        "type": "string",
                        "default": "f5c0102d"
                      },
                      "sendGridUnsubscribeGroupId": {
                        "description": "Sendgrid Group Id obtained from their Dashboard",
                        "type": "string",
                        "default": "sendGridUnsubscribeGroupId"
                      },
                      "useWebhook": {
                        "description": "Enable Webhook",
                        "type": "boolean",
                        "default": false
                      },
                      "webhookURL": {
                        "description": "Webhook Url",
                        "type": "string",
                        "default": "https://example.com"
                      },
                      "useWebhookBasicAuth": {
                        "description": "Enable Basic Authentication",
                        "type": "boolean",
                        "default": false
                      },
                      "webhookUsername": {
                        "description": "Basic Authentication Username",
                        "type": "string",
                        "default": "username"
                      },
                      "webhookPassword": {
                        "description": "Basic Authentication Password",
                        "type": "string",
                        "default": "f5c0102d"
                      },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailNotificationRequestSchema": {
        "properties": {
          "settings": {
            "required": [
              "messageDelay",
              "senderEmail",
              "senderName",
              "sendGridTemplateId",
              "sendGridUnsubscribeGroupId",
              "useWebhook",
              "webhookURL",
              "useWebhookBasicAuth",
              "webhookUsername",
              "webhookPassword",
              "sendEmailReplies",
              "senderEmailForReplies"
            ],
            "properties": {
              "sendGridApiKey": {
                "description": "Sendgrid API key",
                "type": "string",
                "default": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
              },
              "messageDelay": {
                "description": "Time Interval after which notifications will be sent",
                "type": "number",
                "default": 120
              },
              "senderEmail": {
                "description": "Sendgrid Sender Email for Notification",
                "type": "string",
                "default": "mymail@example.com"
              },
              "senderName": {
                "description": "Sendgrid Sender Name",
                "type": "string",
                "default": "John Doe"
              },
              "sendGridTemplateId": {
                "description": "Send Grid Template",
                "type": "string",
                "default": "f5c0102d"
              },
              "sendGridUnsubscribeGroupId": {
                "description": "Sendgrid Group Id obtained from their Dashboard",
                "type": "string",
                "default": "sendGridUnsubscribeGroupId"
              },
              "useWebhook": {
                "description": "Enable Webhook",
                "type": "boolean",
                "default": false
              },
              "webhookURL": {
                "description": "Webhook Url",
                "type": "string",
                "default": "https://example.com"
              },
              "useWebhookBasicAuth": {
                "description": "Enable Basic Authentication",
                "type": "boolean",
                "default": false
              },
              "webhookUsername": {
                "description": "Basic Authentication Username",
                "type": "string",
                "default": "username"
              },
              "webhookPassword": {
                "description": "Basic Authentication Password",
                "type": "string",
                "default": "f5c0102d"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailNotificationSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "sendGridApiKey": {
                        "description": "Sendgrid API key",
                        "type": "string",
                        "default": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
                      },
                      "messageDelay": {
                        "description": "Time Interval after which notifications will be sent",
                        "type": "number",
                        "default": 120
                      },
                      "senderEmail": {
                        "description": "Sendgrid Sender Email for Notification",
                        "type": "string",
                        "default": "mymail@example.com"
                      },
                      "senderName": {
                        "description": "Sendgrid Sender Name",
                        "type": "string",
                        "default": "John Doe"
                      },
                      "sendGridTemplateId": {
                        "description": "Send Grid Template",
                        "type": "string",
                        "default": "f5c0102d"
                      },
                      "sendGridUnsubscribeGroupId": {
                        "description": "Sendgrid Group Id obtained from their Dashboard",
                        "type": "string",
                        "default": "sendGridUnsubscribeGroupId"
                      },
                      "useWebhook": {
                        "description": "Enable Webhook",
                        "type": "boolean",
                        "default": false
                      },
                      "webhookURL": {
                        "description": "Webhook Url",
                        "type": "string",
                        "default": "https://example.com"
                      },
                      "useWebhookBasicAuth": {
                        "description": "Enable Basic Authentication",
                        "type": "boolean",
                        "default": false
                      },
                      "webhookUsername": {
                        "description": "Basic Authentication Username",
                        "type": "string",
                        "default": "username"
                      },
                      "webhookPassword": {
                        "description": "Basic Authentication Password",
                        "type": "string",
                        "default": "f5c0102d"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailRepliesDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailRepliesGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "senderEmailForReplies": { "type": "string" },
                      "sendEmailReplies": { "type": "boolean" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailRepliesRequestSchema": {
        "properties": {
          "settings": {
            "required": ["sendEmailReplies"],
            "properties": {
              "senderEmailForReplies": {
                "description": "Email For Replies",
                "type": "string",
                "default": "mymail@example.com"
              },
              "sendEmailReplies": {
                "description": "Enable Email Replies",
                "type": "boolean",
                "default": false
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "emailRepliesSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "senderEmailForReplies": { "type": "string" },
                      "sendEmailReplies": { "type": "boolean" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "extensionListSchema": {
        "properties": {
          "email-notification": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "human-moderation": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "image-moderation": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "link-preview": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "message-translation": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "profanity-filter": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "push-notification": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "thumbnail-generation": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          },
          "broadcast": {
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "tagline": { "type": "string" }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "extensionSchema": {
        "properties": {
          "enabled": {
            "properties": {
              "extention_id1": {
                "properties": {
                  "success": { "type": "boolean" },
                  "message": { "type": "string" }
                },
                "type": "object"
              },
              "extention_id2": {
                "properties": {
                  "success": { "type": "boolean" },
                  "message": { "type": "string" }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "disabled": {
            "properties": {
              "extention_id3": {
                "properties": {
                  "success": { "type": "boolean" },
                  "message": { "type": "string" }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "giphyDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "success": { "type": "string" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "giphyGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "giphyApiKey": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "giphyRequestSchema": {
        "properties": {
          "settings": {
            "required": ["giphyApiKey"],
            "properties": {
              "giphyApiKey": {
                "description": "Giphy API Key obtained from their Dashboard",
                "type": "string",
                "default": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "giphySchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "giphyApiKey": { "type": "string" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "humanModerationCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "allUserMessages": { "type": "boolean" },
                      "allGroupMessages": { "type": "boolean" },
                      "senders": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "receiverGroups": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "receiverUsers": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "allMessages": { "type": "boolean" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "humanModerationDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "humanModerationGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "allUserMessages": { "type": "boolean" },
                      "allGroupMessages": { "type": "boolean" },
                      "senders": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "receiverGroups": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "receiverUsers": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "allMessages": { "type": "boolean" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "humanModerationRequestSchema": {
        "properties": {
          "settings": {
            "required": [
              "allUserMessages",
              "allGroupMessages",
              "senders",
              "receiverGroups",
              "receiverUsers",
              "allMessages"
            ],
            "properties": {
              "allUserMessages": {
                "description": "Moderat all user messages",
                "type": "boolean",
                "default": false
              },
              "allGroupMessages": {
                "description": "Moderat all group messages",
                "type": "boolean",
                "default": false
              },
              "senders": {
                "description": "Moderate messages from UIDs",
                "type": "array",
                "items": { "type": "string" },
                "default": ["superhero1", "superhero2"]
              },
              "receiverGroups": {
                "description": "Moderate messages to GUIDs",
                "type": "array",
                "items": { "type": "string" },
                "default": ["supergroup"]
              },
              "receiverUsers": {
                "description": "Moderate messages to UIDs",
                "type": "array",
                "items": { "type": "string" },
                "default": ["superhero3"]
              },
              "allMessages": {
                "description": "Moderate all messages",
                "type": "boolean",
                "default": false
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "imageModerationDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "imageModerationGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "dropMessage": { "type": "boolean" },
                      "appId": { "type": "integer" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "imageModerationRequestSchema": {
        "properties": {
          "settings": {
            "required": ["dropMessage"],
            "properties": {
              "dropMessage": {
                "description": "Should drop the message with XSS script",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "imageModerationSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "dropMessage": { "type": "boolean" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "imageModerationUpdateRequestSchema": {
        "properties": {
          "settings": {
            "required": ["dropMessage"],
            "properties": {
              "dropMessage": {
                "description": "Should drop the message with XSS script",
                "type": "boolean",
                "default": true
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "intercomDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "intercomGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "appId": { "type": "string" },
                      "customerSupportUid": { "type": "string" },
                      "intercomAccessToken": { "type": "string" },
                      "webhookURL": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "intercomRequestSchema": {
        "properties": {
          "settings": {
            "required": ["intercomAccessToken", "customerSupportUid"],
            "properties": {
              "intercomAccessToken": {
                "description": "For connecting and exchanging messages between CometChat and Intercom",
                "type": "string",
                "default": "EgsDdxRZFUy4tPWDjwmyZvYk"
              },
              "customerSupportUid": {
                "description": "Customer support uid that you have selected",
                "type": "string",
                "default": "superhero2"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "intercomSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "appId": { "type": "string" },
                      "customerSupportUid": { "type": "string" },
                      "intercomAccessToken": { "type": "string" },
                      "webhookURL": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "listTriggerSchema": {
        "properties": {
          "id": { "type": "string" },
          "description": { "type": "string" }
        },
        "type": "object"
      },
      "messageShortcutsDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "messageShortcutsGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "shortcuts": { "type": "object" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "messageShortcutsRequestSchema": {
        "properties": {
          "settings": {
            "required": ["shortcuts"],
            "properties": {
              "shortcuts": {
                "description": "Shortcuts and message mapping",
                "type": "object",
                "default": {
                  "!cu": "See you later.",
                  "!ty": "Hey! Thanks a lot! 😊",
                  "!hbd": "Happy Birthday! 🥳",
                  "!ssup": "What's up!?",
                  "!wc": "You're welcome!"
                }
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "messageShortcutsSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "shortcuts": { "type": "object" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "metaSchema": {
        "properties": {
          "pagination": {
            "properties": {
              "total": { "type": "integer" },
              "count": { "type": "integer" },
              "per_page": { "type": "integer" },
              "current_page": { "type": "integer" },
              "total_pages": { "type": "integer" },
              "links": { "type": "string" }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "profanityFilterCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "dropMessage": { "type": "boolean" },
                      "badwords": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "profanityFilterDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "profanityFilterGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "dropMessage": { "type": "boolean" },
                      "groupGUID": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "profanityFilterRequestSchema": {
        "properties": {
          "settings": {
            "required": ["dropMessage", "badwords"],
            "properties": {
              "dropMessage": {
                "description": "conatin the dropMessage",
                "type": "boolean",
                "default": false
              },
              "badwords": {
                "description": "remove the badwords",
                "type": "array",
                "items": { "type": "string" },
                "default": ["xyz"]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pushNotificationDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pushNotificationGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "version": {
                        "description": "2: Token-based (Recommended) | 0: Topic-based + Token-based | 1: Topic-based (Legacy)",
                        "type": "number",
                        "default": 2
                      },
                      "pushProvider": {
                        "description": "1: FCM | 2: APNs | 0: FCM+APNs",
                        "type": "number",
                        "default": 1
                      },
                      "fcmServerKey": { "type": "string" },
                      "notificationInPayload": {
                        "properties": {
                          "web": {
                            "description": "Include 'notification' key for Web",
                            "type": "boolean",
                            "default": true
                          },
                          "android": {
                            "description": "Include 'notification' key for Android",
                            "type": "boolean",
                            "default": false
                          },
                          "ionic_cordova": {
                            "description": "Include 'notification' key for Ionic",
                            "type": "boolean",
                            "default": true
                          },
                          "react_native": {
                            "description": "Include 'notification' key for React native",
                            "type": "boolean",
                            "default": false
                          },
                          "ios": {
                            "description": "Include 'notification' key for iOS",
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "type": "object"
                      },
                      "useP8": { "type": "boolean" },
                      "keyId": { "type": "string" },
                      "teamId": { "type": "string" },
                      "bundleId": { "type": "string" },
                      "sendApnsProduction": { "type": "boolean" },
                      "sendNewMessageNotification": { "type": "boolean" },
                      "sendEditMessageNotification": { "type": "boolean" },
                      "sendDeleteMessageNotification": { "type": "boolean" },
                      "sendThreadedMessageNotification": { "type": "boolean" },
                      "sendIncomingCallNotification": { "type": "boolean" },
                      "sendMissedCallNotification": { "type": "boolean" },
                      "sendMemberJoinedNotification": { "type": "boolean" },
                      "sendMemberLeftNotification": { "type": "boolean" },
                      "sendMemberKickedNotification": { "type": "boolean" },
                      "sendMemberBannedNotification": { "type": "boolean" },
                      "sendMemberUnbannedNotification": { "type": "boolean" },
                      "sendMemberAddedNotification": { "type": "boolean" },
                      "sendMemberScopeChangedNotification": {
                        "type": "boolean"
                      },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pushNotificationRequestSchema": {
        "properties": {
          "settings": {
            "required": ["version"],
            "properties": {
              "version": {
                "description": "2: Token-based (Recommended) | 0: Topic-based + Token-based | 1: Topic-based (Legacy)",
                "type": "number",
                "default": 2
              },
              "pushProvider": {
                "description": "1: FCM | 2: APNs | 0: FCM+APNs",
                "type": "number",
                "default": 1
              },
              "fcmServerKey": { "type": "string" },
              "notificationInPayload": {
                "properties": {
                  "web": {
                    "description": "Include 'notification' key for Web",
                    "type": "boolean",
                    "default": true
                  },
                  "android": {
                    "description": "Include 'notification' key for Android",
                    "type": "boolean",
                    "default": false
                  },
                  "ionic_cordova": {
                    "description": "Include 'notification' key for Ionic",
                    "type": "boolean",
                    "default": true
                  },
                  "react_native": {
                    "description": "Include 'notification' key for React native",
                    "type": "boolean",
                    "default": false
                  },
                  "ios": {
                    "description": "Include 'notification' key for iOS",
                    "type": "boolean",
                    "default": true
                  }
                },
                "type": "object"
              },
              "useP8": {
                "description": "Required for APNs only. Use .p8; as it never expires",
                "type": "boolean",
                "default": true
              },
              "keyId": {
                "description": "Required for APNs only.",
                "type": "string"
              },
              "teamId": {
                "description": "Required for APNs only.",
                "type": "string"
              },
              "bundleId": {
                "description": "Required for APNs only.",
                "type": "string"
              },
              "sendApnsProduction": {
                "description": "Required for APNs only. 'true' for apps available on the Appstore",
                "type": "boolean",
                "default": false
              },
              "sendNewMessageNotification": {
                "type": "boolean",
                "default": true
              },
              "sendEditMessageNotification": {
                "type": "boolean",
                "default": false
              },
              "sendDeleteMessageNotification": {
                "type": "boolean",
                "default": false
              },
              "sendThreadedMessageNotification": {
                "type": "boolean",
                "default": true
              },
              "sendIncomingCallNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMissedCallNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberJoinedNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberLeftNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberKickedNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberBannedNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberUnbannedNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberAddedNotification": {
                "type": "boolean",
                "default": true
              },
              "sendMemberScopeChangedNotification": {
                "type": "boolean",
                "default": false
              },
              "appId": { "type": "string" }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pushNotificationSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "version": {
                        "description": "2: Token-based (Recommended) | 0: Topic-based + Token-based | 1: Topic-based (Legacy)",
                        "type": "number",
                        "default": 2
                      },
                      "pushProvider": {
                        "description": "1: FCM | 2: APNs | 0: FCM+APNs",
                        "type": "number",
                        "default": 1
                      },
                      "fcmServerKey": { "type": "string" },
                      "notificationInPayload": {
                        "properties": {
                          "web": {
                            "description": "Include 'notification' key for Web",
                            "type": "boolean",
                            "default": true
                          },
                          "android": {
                            "description": "Include 'notification' key for Android",
                            "type": "boolean",
                            "default": false
                          },
                          "ionic_cordova": {
                            "description": "Include 'notification' key for Ionic",
                            "type": "boolean",
                            "default": true
                          },
                          "react_native": {
                            "description": "Include 'notification' key for React native",
                            "type": "boolean",
                            "default": false
                          },
                          "ios": {
                            "description": "Include 'notification' key for iOS",
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "type": "object"
                      },
                      "useP8": {
                        "description": "Required for APNs only. Use .p8; as it never expires",
                        "type": "boolean",
                        "default": true
                      },
                      "keyId": {
                        "description": "Required for APNs only.",
                        "type": "string",
                        "default": ""
                      },
                      "teamId": {
                        "description": "Required for APNs only.",
                        "type": "string",
                        "default": ""
                      },
                      "bundleId": {
                        "description": "Required for APNs only.",
                        "type": "string",
                        "default": ""
                      },
                      "sendApnsProduction": {
                        "description": "Required for APNs only. 'true' for apps available on the Appstore",
                        "type": "boolean",
                        "default": false
                      },
                      "sendNewMessageNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendEditMessageNotification": {
                        "type": "boolean",
                        "default": false
                      },
                      "sendDeleteMessageNotification": {
                        "type": "boolean",
                        "default": false
                      },
                      "sendThreadedMessageNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendIncomingCallNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMissedCallNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberJoinedNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberLeftNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberKickedNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberBannedNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberUnbannedNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberAddedNotification": {
                        "type": "boolean",
                        "default": true
                      },
                      "sendMemberScopeChangedNotification": {
                        "type": "boolean",
                        "default": false
                      },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportMessageCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "maxReports": { "type": "number" },
                      "useWebhook": { "type": "boolean" },
                      "webhookURL": { "type": "string" },
                      "basicAuthUsername": { "type": "string" },
                      "basicAuthPassword": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportMessageDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "success": { "type": "boolean" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportMessageGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "maxReports": { "type": "number" },
                      "useWebhook": { "type": "boolean" },
                      "webhookURL": { "type": "string" },
                      "basicAuthUsername": { "type": "string" },
                      "basicAuthPassword": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportMessageRequestSchema": {
        "properties": {
          "settings": {
            "required": ["maxReports", "useWebhook"],
            "properties": {
              "maxReports": {
                "description": "Maximum number of unique reports after which moderation actions needs to be taken",
                "type": "number",
                "default": 3
              },
              "useWebhook": {
                "description": "Send reports to webhook and perform custom actions",
                "type": "boolean",
                "default": true
              },
              "webhookURL": {
                "description": "The webhook URL to be triggered",
                "type": "string",
                "default": "https://www.your-domain.com/take-action"
              },
              "basicAuthUsername": {
                "description": "Basic Auth messagename to use for calling your webhook URL",
                "type": "string",
                "default": "abcd"
              },
              "basicAuthPassword": {
                "description": "Basic Auth password to use for calling your webhook URL",
                "type": "string",
                "default": "1234"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportUserCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "maxReports": { "type": "number" },
                      "useWebhook": { "type": "boolean" },
                      "webhookURL": { "type": "string" },
                      "basicAuthUsername": { "type": "string" },
                      "basicAuthPassword": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportUserDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "success": { "type": "boolean" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportUserGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "maxReports": { "type": "number" },
                      "useWebhook": { "type": "boolean" },
                      "webhookURL": { "type": "string" },
                      "basicAuthUsername": { "type": "string" },
                      "basicAuthPassword": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "reportUserRequestSchema": {
        "properties": {
          "settings": {
            "required": ["maxReports", "useWebhook"],
            "properties": {
              "maxReports": {
                "description": "Maximum number of unique reports after which moderation actions needs to be taken",
                "type": "number",
                "default": 3
              },
              "useWebhook": {
                "description": "Send reports to webhook and perform custom actions",
                "type": "boolean",
                "default": true
              },
              "webhookURL": {
                "description": "The webhook URL to be triggered",
                "type": "string",
                "default": "https://www.your-domain.com/take-action"
              },
              "basicAuthUsername": {
                "description": "Basic Auth username to use for calling your webhook URL",
                "type": "string",
                "default": "abcd"
              },
              "basicAuthPassword": {
                "description": "Basic Auth password to use for calling your webhook URL",
                "type": "string",
                "default": "1234"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "richMediaPreviewCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "iframelyApiKey": { "type": "string" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "richMediaPreviewDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "richMediaPreviewGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "iframelyApiKey": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "richMediaPreviewRequestSchema": {
        "properties": {
          "settings": {
            "required": ["iframelyApiKey"],
            "properties": {
              "iframelyApiKey": {
                "description": "iFramely Api Key obtained from their Dashboard",
                "type": "string",
                "default": "abcd12345678"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "sentimentAnalysisDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "sentimentAnalysisGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "dropMessage": { "type": "boolean" },
                      "appId": { "type": "integer" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "sentimentAnalysisRequestSchema": {
        "properties": {
          "settings": {
            "required": ["dropMessage"],
            "properties": {
              "dropMessage": {
                "description": "Should drop the message with Negative sentiments",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "sentimentAnalysisSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "dropMessage": { "type": "boolean" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "smsNotificationDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": { "success": { "type": "boolean" } },
            "type": "object"
          }
        },
        "type": "object"
      },
      "smsNotificationGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "fromMobileNo": { "type": "string" },
                      "messageDelay": { "type": "number" },
                      "twilioAccountSid": { "type": "string" },
                      "twilioAuthToken": { "type": "string" },
                      "websiteURL": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "smsNotificationRequestSchema": {
        "properties": {
          "settings": {
            "required": [
              "fromMobileNo",
              "messageDelay",
              "twilioAccountSid",
              "twilioAuthToken",
              "websiteURL"
            ],
            "properties": {
              "fromMobileNo": {
                "description": "For sending SMS Notifications",
                "type": "string",
                "default": "+12345678"
              },
              "messageDelay": {
                "description": "Send an sms if a message has not been read before these many seconds",
                "type": "number",
                "default": 60
              },
              "twilioAccountSid": {
                "description": "Found on your Twilio console",
                "type": "string",
                "default": "ACfe6cccc530a5151a8eff415###"
              },
              "twilioAuthToken": {
                "description": "Found on your Twilio console",
                "type": "string",
                "default": "6928f0cadd4e62d4311234563ef3###"
              },
              "websiteURL": {
                "description": "A website url",
                "type": "string",
                "default": "www.somewebsite.com"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "smsNotificationSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": { "success": { "type": "boolean" } },
            "type": "object"
          }
        },
        "type": "object"
      },
      "stickersGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "dropMessage": { "type": "boolean" },
                      "defaultMasterStickersData": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "enableFlag": { "type": "boolean" },
                            "stickerName": { "type": "string" },
                            "stickerOrder": { "type": "number" },
                            "stickerSetId": { "type": "string" },
                            "stickerSetOrder": { "type": "number" },
                            "stickerSetName": { "type": "string" },
                            "stickerUrl": { "type": "string" }
                          },
                          "type": "object"
                        }
                      },
                      "customStickersData": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "appId": { "type": "string" },
                            "enableFlag": { "type": "boolean" },
                            "stickerName": { "type": "string" },
                            "stickerOrder": { "type": "number" },
                            "stickerOrderCount": { "type": "number" },
                            "stickerSetId": { "type": "string" },
                            "stickerSetOrder": { "type": "number" },
                            "stickerSetName": { "type": "string" },
                            "stickerUrl": { "type": "string" }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "stickersRequestSchema": {
        "required": [
          "dropMessage",
          "customregexData",
          "defaultRegexData",
          "deleteCustomRegexData"
        ],
        "properties": {
          "appId": {
            "description": "App Id",
            "type": "string",
            "default": "appId_1234"
          },
          "defaultMasterStickersData": {
            "description": "Configure the default stickers",
            "type": "array",
            "items": { "type": "object" },
            "default": [
              {
                "enableFlag": false,
                "id": "1",
                "stickerName": "US Phone numbers",
                "stickerOrder": "",
                "stickerSetId": "sticker_1234",
                "stickerSetName": "good_Sticker",
                "stickerSetOrder": 1,
                "stickerUrl": "https://data-us.cometchat-staging.com/stickers/littledyno/litt_14.png"
              }
            ]
          },
          "customStickersData": {
            "description": "Configure the custom stickers",
            "type": "array",
            "items": { "type": "object" },
            "default": [
              {
                "appId": "appId1234",
                "enableFlag": true,
                "stickerName": "goodSticker",
                "stickerOrder": 1,
                "stickerSetId": "stickerSetId1234",
                "stickerSetOrder": 1,
                "stickerSetName": "stickerSetName",
                "stickerUrl": "https://mysite.com/some_sticker.png",
                "id": ""
              }
            ]
          }
        },
        "type": "object"
      },
      "stickersResponseSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "stipopCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "stipopApiKey": { "type": "string" },
                      "stipopAppId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "stipopDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "stipopGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "stipopApiKey": { "type": "string" },
                      "stipopAppId": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "stipopRequestSchema": {
        "properties": {
          "settings": {
            "required": ["stipopApiKey", "stipopAppId"],
            "properties": {
              "stipopApiKey": {
                "description": "Used as Authentication mechanism to connect with stipop",
                "type": "string",
                "default": "e24ce#2324b2jrbj3212"
              },
              "stipopAppId": {
                "description": "Determines a particular app in stipop",
                "type": "string",
                "default": "9221#njdwe112213131"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teamMgmtGetSchema": {
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" },
          "createdAt": { "type": "integer" }
        },
        "type": "object"
      },
      "teamMgmtSchema": {
        "properties": {
          "collaboratorsToRemove": { "type": "object" },
          "admins": {
            "properties": {
              "admin1@cometchat.com": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              },
              "admin2@cometchat.com": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          },
          "developers": {
            "properties": {
              "dev1@cometchat.com": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          },
          "moderators": { "type": "object" }
        },
        "type": "object"
      },
      "tenorCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "tenorApiKey": { "type": "string" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tenorDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tenorGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "tenorApiKey": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tenorRequestSchema": {
        "properties": {
          "settings": {
            "required": ["tenorApiKey"],
            "properties": {
              "tenorApiKey": {
                "description": "Tenor Api Key obtained from their Dashboard",
                "type": "string",
                "default": "abcd12345678"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tinyUrlCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "tinyUrlAPIToken": { "type": "string" },
                      "tinyUrlDomain": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tinyUrlDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tinyUrlGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "tinyUrlAPIToken": { "type": "string" },
                      "tinyUrlDomain": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "tinyUrlRequestSchema": {
        "properties": {
          "settings": {
            "required": ["tinyUrlAPIToken", "tinyUrlDomain"],
            "properties": {
              "tinyUrlAPIToken": {
                "description": "Used to provide authentication mechanism to access tiny-url",
                "type": "string",
                "default": "1kn2kenkdnwnrn2in1n1"
              },
              "tinyUrlDomain": {
                "description": "Domain if you have chosen paid plan otherwise default",
                "type": "string",
                "default": "tiny.one"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "triggerSchema": {
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "type": "object"
      },
      "videoBroadcastingDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "videoBroadcastingGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "apiVideoKey": { "type": "string" },
                      "appId": { "type": "string" },
                      "recordVideo": { "type": "boolean" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "videoBroadcastingRequestSchema": {
        "properties": {
          "settings": {
            "required": ["apiVideoKey", "recordVideo"],
            "properties": {
              "apiVideoKey": {
                "description": "API video production API Key",
                "type": "string",
                "default": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
              },
              "recordVideo": {
                "description": "Enable to record the video",
                "type": "boolean",
                "default": false
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "videoBroadcastingSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "apiVideoKey": { "type": "string" },
                      "recordVideo": { "type": "boolean" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "virusMalwareScannerDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "virusMalwareScannerGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "scaniiApiKey": { "type": "string" },
                      "scaniiSecretKey": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "virusMalwareScannerRequestSchema": {
        "properties": {
          "settings": {
            "required": ["scaniiApiKey", "scaniiSecretKey"],
            "properties": {
              "scaniiApiKey": {
                "description": " Scanii API Key obtained from their Dashboard",
                "type": "string",
                "default": "1q6Re9CYAAfzLZyB8F4eMNX0Pslyv222"
              },
              "scaniiSecretKey": {
                "description": " Scanii Secret Key obtained from their Dashboard",
                "type": "string",
                "default": "f5c0102d"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "virusMalwareScannerSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "scaniiApiKey": { "type": "string" },
                      "scaniiSecretKey": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "voiceTranscriptionCreateSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "revaiAPIKey": { "type": "string" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "voiceTranscriptionDeleteSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": { "success": { "type": "boolean" } },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "voiceTranscriptionGetSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": {
                      "revaiAPIKey": { "type": "string" },
                      "appId": { "type": "string" }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "voiceTranscriptionRequestSchema": {
        "properties": {
          "settings": {
            "required": ["revaiAPIKey"],
            "properties": {
              "revaiAPIKey": {
                "description": "Used as authentication mechanism while connecting to Rev Ai",
                "type": "string",
                "default": "dwijdiwdwi####"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "webhookSchema": {
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "webhookURL": { "type": "string" },
          "enabled": { "type": "boolean" }
        },
        "type": "object"
      },
      "xssRequestSchema": {
        "properties": {
          "settings": {
            "required": ["dropMessage"],
            "properties": {
              "dropMessage": {
                "description": "Should drop the message with XSS script",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "xssRequestUpdateSchema": {
        "properties": {
          "settings": {
            "required": ["dropMessage"],
            "properties": {
              "dropMessage": {
                "description": "Should drop the message with XSS script",
                "type": "boolean",
                "default": true
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "xssSchema": {
        "properties": {
          "statusCode": { "type": "integer" },
          "success": { "type": "boolean" },
          "responseTime": { "type": "number" },
          "body": {
            "properties": {
              "data": {
                "properties": {
                  "settings": {
                    "properties": { "dropMessage": { "type": "boolean" } },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "parameters": {
      "perPage": {
        "name": "perPage",
        "in": "query",
        "description": "Number of apps to be fetched in a request. The default value is 25 and the maximum value is 1000.",
        "schema": { "type": "string" }
      },
      "searchKey": {
        "name": "searchKey",
        "in": "query",
        "description": "Searches for given keyword in apps list (either App name or App ID)",
        "schema": { "type": "string" }
      },
      "perPage--extensions": {
        "name": "perPage",
        "in": "query",
        "description": "Number of extensions to be fetched in a request. The default value is 25 and the maximum value is 1000.",
        "schema": { "type": "string", "default": "25" }
      },
      "uid": {
        "name": "uid",
        "in": "path",
        "description": "An UID of a user.",
        "required": true,
        "schema": { "type": "string" },
        "examples": { "string": { "summary": "UID", "value": "" } }
      },
      "guid": {
        "name": "guid",
        "in": "path",
        "description": "A GUID of a group.",
        "required": true,
        "schema": { "type": "string" },
        "examples": { "string": { "summary": "GUID", "value": "" } }
      },
      "requiredonBehalfOf": {
        "name": "requiredonBehalfOf",
        "in": "header",
        "description": "UID of the user on whose behalf the action is performed.",
        "schema": { "type": "string" }
      },
      "onBehalfOf": {
        "name": "onBehalfOf",
        "in": "header",
        "description": "UID of the user on whose behalf the action is performed.",
        "schema": { "type": "string" }
      },
      "appId": {
        "name": "appId",
        "in": "path",
        "description": "AppID in which the extension has to be enabled/disabled",
        "required": true,
        "schema": { "type": "string" }
      },
      "appId-webhooks": {
        "name": "appId",
        "in": "path",
        "description": "AppID in which the webhooks has to be enabled/disabled",
        "required": true,
        "schema": { "type": "string" }
      },
      "key": {
        "name": "key",
        "in": "header",
        "description": "Authorization Key",
        "required": true,
        "schema": { "type": "string" }
      },
      "secret": {
        "name": "secret",
        "in": "header",
        "description": "Authorization Secret",
        "required": true,
        "schema": { "type": "string" }
      },
      "webhookId": {
        "name": "webhookId",
        "in": "path",
        "description": "Id of the webhook",
        "required": true,
        "schema": { "type": "string" }
      }
    }
  },
  "tags": [
    { "name": "App", "description": "The Rest collection for app." },
    {
      "name": "Extensions",
      "description": "The REST collections for extensions."
    },
    {
      "name": "Chat Widgets",
      "description": "The REST collections for Chat widgets."
    },
    {
      "name": "Extension - Giphy",
      "description": "The REST collections for Giphy extension."
    },
    {
      "name": "Extension - XSS Filter",
      "description": "The REST collections for XSS Filter extension."
    },
    {
      "name": "Extension - Image Moderation",
      "description": "The REST collections for Image Moderation extension."
    },
    {
      "name": "Extension - Report user",
      "description": "The REST collections for Report user extension."
    },
    {
      "name": "Extension - Report message",
      "description": "The REST collections for Report message extension."
    },
    {
      "name": "Extension - Sentiment analysis",
      "description": "The REST collections for Sentiment analysis extension."
    },
    {
      "name": "Extension - Voice transcription",
      "description": "The REST collections for Voice transcription extension."
    },
    {
      "name": "Extension - Stipop",
      "description": "The REST collections for Stipop extension."
    },
    {
      "name": "Extension - TinyURL",
      "description": "The REST collections for TinyURL extension."
    },
    {
      "name": "Extension - Intercom",
      "description": "The REST collections for Intercom extension."
    },
    {
      "name": "Extension - Bitly",
      "description": "The REST collections for Bitly extension."
    },
    {
      "name": "Extension - Rich media preview",
      "description": "The REST collections for Rich media preview extension."
    },
    {
      "name": "Extension - Virus Malware Scanner",
      "description": "The REST collections for Virus Malware Scanner extension."
    },
    {
      "name": "Extension - Video Broadcasting",
      "description": "The REST collections for Video Broadcasting extension."
    },
    {
      "name": "Extension - Tenor gifs",
      "description": "The REST collections for Tenor gifs extension."
    },
    {
      "name": "Extension - End-to-end encryption",
      "description": "The REST collections for End-to-end encryption extension."
    },
    {
      "name": "Extension - In-flight message moderation",
      "description": "The REST collections for In-flight message moderation extension."
    },
    {
      "name": "Extension - Stickers extension",
      "description": "The REST collections for Stickers extension."
    },
    {
      "name": "Extension - Data masking",
      "description": "The REST collections for Data masking extension."
    },
    {
      "name": "Extension - Email replies",
      "description": "The REST collections for Email replies extension."
    },
    {
      "name": "Extension - SMS Notification",
      "description": "The REST collections for SMS Notification extension."
    },
    {
      "name": "Extension - Push notification",
      "description": "The REST collections for Push notification extension."
    },
    {
      "name": "Extension - Chatwoot",
      "description": "The REST collections for Chatwoot extension."
    },
    {
      "name": "Extension - Message Shortcuts",
      "description": "The REST collections for Message shortcuts extension."
    },
    {
      "name": "Extension - Email Notification",
      "description": "The REST collections for Email Notification extension."
    },
    {
      "name": "Team Management",
      "description": "The REST collections for team management."
    },
    {
      "name": "Extension - Profanity-filter",
      "description": "The REST collections for Profanity-filter extension."
    },
    { "name": "Webhooks", "description": "The REST collections for Webhooks." }
  ],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
